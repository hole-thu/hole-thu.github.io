{"version":3,"sources":["color_picker.js","text_splitter.js","infrastructure/functions.js","infrastructure/widgets.js","Config.js","Markdown.js","Common.js","Message.js","cache.js","flows_api.js","Attention.js","UserAction.js","Flows.js","Title.js","Sidebar.js","PressureHelper.js","App.js","registerServiceWorker.js","index.js"],"names":["ColorPicker","this","names","current_h","Math","random","name","is_tmp","toLowerCase","PID_RE","URL_PID_RE","NICKNAME_RE","URL_RE","TAG_RE","split_text","txt","rules","forEach","rule","regex","concat","apply","map","part","content","split","seg","test","filter","get_json","res","ok","text","then","t","JSON","parse","e","console","error","trace","log","SyntaxError","substr","length","Error","status","statusText","NAMES","pad2","x","format_time","time","getMonth","getDate","getHours","getMinutes","getSeconds","chinese_format","buildFormatter","chineseStrings","Time","props","Date","stamp","className","date","formatter","title","toLocaleString","timeZone","hour12","short","TitleLine","LoginPopupSelf","state","loading_status","input_token_ref","React","createRef","tar","ref","preventDefault","href","current","value","alert","target","referrerPolicy","placeholder","onClick","setThuhole","type","disabled","on_close","Component","LoginPopup","popup_show","on_popup_bound","on_popup","bind","on_close_bound","setState","children","token_callback","BUILTIN_IMGS","DEFAULT_CONFIG","background_img","background_color","pressure","easter_egg","color_scheme","block_tmp","block_words_v3","whitelist_cw","ipfs_gateway_list","load_config","loaded_config","config","Object","assign","localStorage","keys","key","undefined","window","save_config","need_load","stringify","bgimg_style","img","color","background","backgroundImage","encodeURI","backgroundColor","backgroundSize","ConfigBackground","callback","save_changes","img_select","indexOf","onChange","on_select","on_change_img","on_change_color","style","PureComponent","ConfigColorScheme","ConfigTextArea","id","sift","description","display","on_change","ConfigSwitch","switch","val","checked","ConfigUI","save_changes_bound","chg","confirm","location","reload","reset_settings","array","join","v","string","md","MarkdownIt","html","linkify","breaks","inline","highlight","str","lang","hljs","getLanguage","__","utils","escapeHtml","use","MarkdownItKaTeX","throwOnError","errorColor","API_BASE","process","ColoredSpan","colors","normalize_url","url","stop_loading","parentNode","classList","remove","HighlightedMarkdown","processInstructions","shouldProcessNode","node","processNode","index","currentLevel","HeadingTag","src","attribs","alt","onError","onLoad","rel","parent","originalText","data","search_param","search_kws","s","push","RegExp","replace","splitted","Fragment","idx","p","URL","pathname","endsWith","searchParams","get","startsWith","is_video","controls","is_audio","show_pid","substring","color_picker","HtmlToReact","ProcessNodeDefinitions","processDefaultNode","parser","Parser","rawMd","renderedMarkdown","render","parseWithInstructions","TEXTAREA_BACKUP","SafeTextarea","on_change_bound","on_keydown_bound","on_keydown","clear","area_ref","change_callback","submit_callback","on_submit","event","ctrlKey","altKey","focus","onKeyDown","maxLength","pwa_prompt_event","PromotionBar","is_ios","navigator","userAgent","matchMedia","matches","standalone","prompt","addEventListener","ClickHandler","moved","init_y","init_x","on_begin_bound","on_begin","on_move_bound","on_move","on_end_bound","on_end","MOVE_THRESHOLD","last_fire","touches","screenY","screenX","abs","do_callback","onTouchStart","onMouseDown","onTouchMove","onMouseMove","MessageViewer","msg","input_suf_ref","load","fetch","headers","token","json","start_time","salt","tmp_token","catch","err","tt","do_set_token","timestamp","user","detail","Cache","db","added_items_since_maintenance","encrypt","decrypt","open_req","indexedDB","open","onerror","onupgradeneeded","result","createObjectStore","keyPath","createIndex","unique","onsuccess","setTimeout","maintenance","pid","o","i","new_key","charCodeAt","String","fromCharCode","c","target_version","parseInt","Promise","resolve","reject","store","transaction","objectStore","get_req","data_str","version","last_access","put","delete","warn","req","count_req","count","openKeyCursor","cur","primaryKey","continue","deleteDatabase","cache","hole_cache","handle_response","response","a","notify","code","parse_replies","replies","sort","b","cid","info","name_id","r","gen_name","_display_color","variant","API","load_replies","cache_version","load_replies_with_cache","cached","set_attention","attention","URLSearchParams","append","method","body","report","reason","block","del","note","update_cw","cw","get_list","page","submode","get_search","keyword","encodeURIComponent","get_single","get_attention","add_vote","vote","get_multi","pids","set_title","save_attentions","saved_attentions","REPOSITORY","EMAIL","TokenCtx","createContext","set_value","InfoSidebar","show_sidebar","serviceWorker","getRegistrations","registrations","registration","unregister","LoginForm","custom_title","TITLE","auto_block_rank","AUTO_BLCOK","FormData","j","rank","copy","Consumer","copy_token","update_title","width","min","max","list","update_auto_block","do_popup","ReplyForm","preview","use_title","on_use_title_change_bound","on_use_title_change","global_keypress_handler_bound","global_keypress_handler","tagName","document","removeEventListener","includes","unshift","on_complete","onSubmit","toggle_preview","PostForm","upload_progress_text","is_loading","file_name","file_type","CW_BACKUP","allow_search","AS_BACKUP","has_poll","POLL_BACKUP","poll_options","on_allow_search_change_bound","on_allow_search_change","on_cw_change_bound","on_cw_change","on_poll_option_change_bound","on_poll_option_change","opt","do_post","splice","f","files","xh","XMLHttpRequest","upload","upload_progress","upload_complete","upload_error","upload_abort","setRequestHeader","send","replaceAll","hash","curr","y","test_ipfs","new_text","origin","set","loaded","total","toFixed","responseText","update_text_after_upload","on_file_change","option","CLICKABLE_TAGS","audio","QUOTE_BLACKLIST","LATEST_POST_ID","check_block","some","word","can_del","load_single_meta","title_elem","single","reply","deletion_detect","Reply","do_filter_name","do_delete","do_report","do_block","author","replyText","has_block_words","author_title","dangerous_user","blocked_count","FlowItem","likenum","is_quote","do_edit_cw","img_clickable","do_vote","copy_link","is_reported","hot_score","poll","question","answers","onVote","customStyles","theme","noStorage","latest_reply","FlowSidebar","error_msg","filter_name","rev","syncState","sync_state","reply_ref","prev","update_count","set_variant","prev_info","prevState","forceCheck","closest","should_text","replies_to_show","slice","reverse","replies_cnt","main_thread_elem","show_reply_bar","set_filter_name","make_do_delete","toggle_rev","toggle_attention","float","is_blocked","offset","height","overflow","once","FlowItemRow","needFold","mode","comments","reply_status","reply_error","hl_rules","parts","quote_id","FlowItemQuote","FlowChunk","ind","hiddenIfInvisible","Flow","toUpperCase","by_c","submode_names","get_submode_names","set_submode","search_text","SubFlow","loaded_pages","chunks","export_text","on_scroll_bound","on_scroll","failed","max_id","comment_json","finished","use_search","use_regex","match","regex_search","toString","post","every","Array","from","Set","scrollHeight","scrollY","innerHeight","load_page","max_len","can_export","trunc_string","should_deletion_detect","gen_export","readOnly","flag_re","ControlBar","set_mode","on_keypress_bound","on_keypress","do_refresh_bound","do_refresh","do_attention_bound","do_attention","decodeURIComponent","lastIndexOf","flag_res","exec","scrollTo","onKeyPress","Title","Sidebar","do_close_bound","do_close","do_back_bound","do_back","contents","stack","cur_title","onTouchEnd","click","PressureHelper","level","fired","esc_interval","clearInterval","Pressure","change","force","do_fire","end","polyfill","only","preventSelect","repeat","THRESHOLD","setInterval","new_level","pad","left","right","top","bottom","DeprecatedAlert","App","override","update_color_scheme","add","addListener","listen_darkmode","default","light","dark","sidebar_stack","flow_render_key","show_sidebar_bound","set_mode_bound","on_pressure_bound","on_pressure","ns","position","pop","Provider","isLocalhost","Boolean","hostname","registerValidSW","swUrl","register","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","getElementById","ready","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.da455971.chunk.js","sourcesContent":["// https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n\nconst golden_ratio_conjugate = 0.618033988749895;\n\nexport class ColorPicker {\n  constructor() {\n    this.names = {};\n    this.current_h = Math.random();\n  }\n\n  get(name, is_tmp = false) {\n    name = name.toLowerCase();\n    if (is_tmp) return ['hsl(0, 0%, 86%)', 'hsl(0, 0%, 25%)'];\n    if (name === '洞主') return ['hsl(0, 0%, 97%)', 'hsl(0, 0%, 16%)'];\n\n    if (!this.names[name]) {\n      this.current_h += golden_ratio_conjugate;\n      this.current_h %= 1;\n      this.names[name] = [\n        `hsl(${this.current_h * 360}, 50%, 90%)`,\n        `hsl(${this.current_h * 360}, 60%, 20%)`,\n      ];\n    }\n    return this.names[name];\n  }\n}\n","// regexp should match the WHOLE segmented part\n// export const PID_RE=/(^|[^\\d\\u20e3\\ufe0e\\ufe0f])([2-9]\\d{4,5}|1\\d{4,6})(?![\\d\\u20e3\\ufe0e\\ufe0f])/g;\nexport const PID_RE = /(^|[^\\d\\u20e3\\ufe0e\\ufe0f])(#\\d{1,7})(?![\\d\\u20e3\\ufe0e\\ufe0f])/g;\n// TODO: fix this re\n// export const URL_PID_RE=/((?:https?:\\/\\/)?thuhole\\.com\\/?#(?:#|%23)([2-9]\\d{4,5}|1\\d{4,6}))(?!\\d|\\u20e3|\\ufe0e|\\ufe0f)/g;\nexport const URL_PID_RE = /((?:https?:\\/\\/)?hole\\.thu\\.monster\\/?#(?:#|%23)(\\d{1,7}))(?!\\d|\\u20e3|\\ufe0e|\\ufe0f)/g;\nexport const NICKNAME_RE = /(^|[^A-Za-z])((?:(?:Angry|Baby|Crazy|Diligent|Excited|Fat|Greedy|Hungry|Interesting|Jolly|Kind|Little|Magic|Naïve|Old|PKU|Quiet|Rich|Superman|Tough|Undefined|Valuable|Wifeless|Xiangbuchulai|Young|Zombie)\\s)?(?:Alice|Bob|Carol|Dave|Eve|Francis|Grace|Hans|Isabella|Jason|Kate|Louis|Margaret|Nathan|Olivia|Paul|Queen|Richard|Susan|Thomas|Uma|Vivian|Winnie|Xander|Yasmine|Zach)|You Win(?: \\d+)?|洞主)(?![A-Za-z])/gi;\nexport const URL_RE = /(^|[^.@a-zA-Z0-9_])((?:https?:\\/\\/)?(?:(?:[\\w-]+\\.)+[a-zA-Z]{2,7}|\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,5})(?::\\d{1,5})?(?:\\/[\\w~!@#$%^&*()\\-_=+[\\]{};:,./?|]*)?)(?![a-zA-Z0-9])/gi;\n\nexport const TAG_RE = /(^|\\s)(#[^#\\s]{1,32})($|\\s|#)/g;\n\nexport function split_text(txt, rules) {\n  // rules: [['name',/regex/],...]\n  // return: [['name','part'],[null,'part'],...]\n\n  txt = [[null, txt]];\n  rules.forEach((rule) => {\n    let [name, regex] = rule;\n    txt = [].concat.apply(\n      [],\n      txt.map((part) => {\n        let [rule, content] = part;\n        if (rule)\n          // already tagged by previous rules\n          return [part];\n        else {\n          return content\n            .split(regex)\n            .map((seg) => (regex.test(seg) ? [name, seg] : [null, seg]))\n            .filter(([name, seg]) => name !== null || seg);\n        }\n      }),\n    );\n  });\n  return txt;\n}\n","export function get_json(res) {\n  if (!res.ok) {\n    return res.text().then((t) => {\n      console.log('error:', res);\n      t = t.length < 100 ? t : '';\n      throw Error(`${res.status} ${res.statusText} ${t}`);\n    });\n  }\n  return res.text().then((t) => {\n    try {\n      return JSON.parse(t);\n    } catch (e) {\n      console.error('json parse error');\n      console.trace(e);\n      console.log(t);\n      throw new SyntaxError('JSON Parse Error ' + t.substr(0, 50));\n    }\n  });\n}\n\nexport function listen_darkmode(override) {\n  // override: true/false/undefined\n  function update_color_scheme() {\n    if (\n      override === undefined\n        ? window.matchMedia('(prefers-color-scheme: dark)').matches\n        : override\n    )\n      document.body.classList.add('root-dark-mode');\n    else document.body.classList.remove('root-dark-mode');\n  }\n\n  update_color_scheme();\n  window.matchMedia('(prefers-color-scheme: dark)').addListener(() => {\n    update_color_scheme();\n  });\n}\n\nconst NAMES = [\n  'Alice',\n  'Bob',\n  'Carol',\n  'Dave',\n  'Eve',\n  'Francis',\n  'Grace',\n  'Hans',\n  'Isabella',\n  'Jason',\n  'Kate',\n  'Louis',\n  'Margaret',\n  'Nathan',\n  'Olivia',\n  'Paul',\n  'Queen',\n  'Richard',\n  'Susan',\n  'Thomas',\n  'Uma',\n  'Vivian',\n  'Winnie',\n  'Xander',\n  'Yasmine',\n  'Zach',\n];\n\nexport function gen_name(name_id) {\n  if (name_id == 0) return '洞主';\n\n  let r = name_id;\n  let name = '';\n  do {\n    r -= 1;\n    name += ' ' + NAMES[r % 26];\n    r = parseInt(r / 26);\n  } while (r);\n\n  return name.substr(1);\n}\n","import React, { Component, PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TimeAgo from 'react-timeago';\nimport chineseStrings from 'react-timeago/lib/language-strings/zh-CN';\nimport buildFormatter from 'react-timeago/lib/formatters/buildFormatter';\n\nimport './global.css';\nimport './widgets.css';\n\nimport { get_json, API_VERSION_PARAM } from './functions';\n\nfunction pad2(x) {\n  return x < 10 ? '0' + x : '' + x;\n}\nexport function format_time(time) {\n  return `${time.getMonth() + 1}-${pad2(\n    time.getDate(),\n  )} ${time.getHours()}:${pad2(time.getMinutes())}:${pad2(time.getSeconds())}`;\n}\nconst chinese_format = buildFormatter(chineseStrings);\nexport function Time(props) {\n  const time = new Date(props.stamp * 1000);\n  return (\n    <span className={'time-str'}>\n      <TimeAgo\n        date={time}\n        formatter={chinese_format}\n        title={time.toLocaleString('zh-CN', {\n          timeZone: 'Asia/Shanghai',\n          hour12: false,\n        })}\n      />\n      &nbsp;\n      {!props.short ? format_time(time) : null}\n    </span>\n  );\n}\n\nexport function TitleLine(props) {\n  return (\n    <p className=\"centered-line title-line aux-margin\">\n      <span className=\"black-outline\">{props.text}</span>\n    </p>\n  );\n}\n\nexport function GlobalTitle(props) {\n  return (\n    <div className=\"aux-margin\">\n      <div className=\"title\">\n        <p className=\"centered-line\">{props.text}</p>\n      </div>\n    </div>\n  );\n}\n\nclass LoginPopupSelf extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading_status: 'idle',\n    };\n\n    this.input_token_ref = React.createRef();\n  }\n\n  setThuhole(e, tar, ref) {\n    console.log(tar);\n    e.preventDefault();\n    tar.href = '/_login?p=thuhole&token=' + ref.current.value;\n    console.log(tar);\n    alert('T大树洞已经没有啦😭');\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"thuhole-login-popup-shadow\" />\n        <div className=\"thuhole-login-popup\">\n          <p>\n            <b>通过第三方验证登陆新T树洞</b>\n          </p>\n          <p>\n            <a href={(process.env.REACT_APP_BACKEND || '/') + \"_login?p=cs\"} target=\"_blank\"\n              referrerPolicy=\"origin\"\n            >\n              <span className=\"icon icon-login\" />\n              &nbsp;闭社\n            </a>\n          </p>\n          <p>\n            <input ref={this.input_token_ref} placeholder=\"T大树洞Token\" />\n            <br />\n            <a\n              href=\"/_login?p=thuhole\"\n              target=\"_blank\"\n              onClick={(e) => {\n                this.setThuhole(e, e.target, this.input_token_ref);\n              }}\n            >\n              <span className=\"icon icon-login\" />\n              &nbsp;T大树洞\n            </a>\n          </p>\n          <p>\n            <small>前往Telegram群查询15分钟临时token</small>\n            <br />\n            <a href=\"//t.me/THUChatBot\" target=\"_blank\">\n              <span className=\"icon icon-login\" />\n              &nbsp;清华大水群\n            </a>\n          </p>\n          <p>\n            <button type=\"button\" disabled>\n              <span className=\"icon icon-login\" />\n              &nbsp;未名bbs\n            </button>\n          </p>\n          <p>\n            <button type=\"button\" disabled>\n              <span className=\"icon icon-login\" />\n              &nbsp;清华统一身份认证\n            </button>\n          </p>\n          <hr />\n          <p>\n            <button onClick={this.props.on_close}>取消</button>\n          </p>\n          <hr />\n          <div className=\"thuhole-login-popup-info\">\n            <p>提醒:</p>\n            <ul>\n              <li>\n                {' '}\n                无论采用哪种方式注册，你后台记录的用户名都是本质实名的（除临时token），因为闭社/T大树洞的管理员可以根据你的闭社id/树洞评论区代号查到邮箱。但是这不影响新T树洞的安全性。新T树洞的匿名性来自隔离用户名与发布的内容，而非试图隔离用户名与真实身份。\n              </li>\n              <li>\n                {' '}\n                由于T大树洞仍未提供授权接口，使用T大树洞方式登陆需要用你的token在特定洞发布一段随机内容以确定身份。这是否违反用户条例由T大树洞管理员决定，需自行承担相关风险。完成登陆后建议立即重置T大树洞token。{' '}\n              </li>\n              <li> 目前一个人可能有两个帐号。</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class LoginPopup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popup_show: false,\n    };\n    this.on_popup_bound = this.on_popup.bind(this);\n    this.on_close_bound = this.on_close.bind(this);\n  }\n\n  on_popup() {\n    this.setState({\n      popup_show: true,\n    });\n  }\n  on_close() {\n    this.setState({\n      popup_show: false,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        {this.props.children(this.on_popup_bound)}\n        {this.state.popup_show && (\n          <LoginPopupSelf\n            token_callback={this.props.token_callback}\n            on_close={this.on_close_bound}\n          />\n        )}\n      </>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nimport './Config.css';\n\nconst BUILTIN_IMGS = {\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/gbp.jpg':\n    '怀旧背景（默认）',\n  'https://www.tsinghua.edu.cn/image/nav-bg.jpg': '清华紫',\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/gbp.jpg':\n    '寻觅繁星',\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/eriri.jpg':\n    '平成著名画师',\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/yurucamp.jpg':\n    '露营天下第一',\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/minecraft.jpg':\n    '麦恩·库拉夫特',\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/cyberpunk.jpg':\n    '赛博城市',\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/bj.jpg':\n    '城市的星光',\n  'https://cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/sif.jpg':\n    '梦开始的地方',\n};\n\nconst DEFAULT_CONFIG = {\n  background_img:\n    '//cdn.jsdelivr.net/gh/thuhole/webhole@gh-pages/static/bg/gbp.jpg',\n  background_color: '#113366',\n  pressure: false,\n  easter_egg: true,\n  color_scheme: 'default',\n  block_tmp: false,\n  block_words_v3: ['🕷️'],\n  whitelist_cw: [],\n  ipfs_gateway_list: [\n    'https://<hash>.ipfs.dweb.link/',\n    'https://<hash>.ipfs.hub.textile.io/',\n    'https://<hash>.ipfs.infura-ipfs.io/',\n    'https://ipfs.adatools.io/ipfs/<hash>',\n    'https://<hash>.ipfs.astyanax.io/',\n    'https://crustwebsites.net/ipfs/<hash>',\n    'https://gateway.pinata.cloud/ipfs/<hash>',\n    'https://ipfs.eth.aragon.network/ipfs/<hash>',\n    'https://ipfs.best-practice.se/ipfs/<hash>',\n    'https://gateway.ipfs.io/ipfs/<hash>',\n    'https://ipfs.fleek.co/ipfs/<hash>',\n    'https://cloudflare-ipfs.com/ipfs/<hash>',\n    'https://via0.com/ipfs/<hash>',\n  ],\n};\n\nexport function load_config() {\n  let config = Object.assign({}, DEFAULT_CONFIG);\n  let loaded_config;\n  try {\n    loaded_config = JSON.parse(localStorage['hole_config'] || '{}');\n  } catch (e) {\n    alert('设置加载失败，将重置为默认设置！\\n' + e);\n    delete localStorage['hole_config'];\n    loaded_config = {};\n  }\n\n  // unrecognized configs are removed\n  Object.keys(loaded_config).forEach((key) => {\n    if (config[key] !== undefined) config[key] = loaded_config[key];\n  });\n\n  if (loaded_config['block_words_v2']) {\n    config['block_words_v3'] = loaded_config['block_words_v2'].concat(\n      config['block_words_v3'],\n    );\n  }\n\n  console.log('config loaded', config);\n  window.config = config;\n}\nexport function save_config(need_load = true) {\n  localStorage['hole_config'] = JSON.stringify(window.config);\n  if (need_load) load_config();\n}\n\nexport function bgimg_style(img, color) {\n  if (img === undefined) img = window.config.background_img;\n  if (color === undefined) color = window.config.background_color;\n  return {\n    background: 'transparent center center',\n    backgroundImage: img === null ? 'unset' : 'url(\"' + encodeURI(img) + '\")',\n    backgroundColor: color,\n    backgroundSize: 'cover',\n  };\n}\n\nclass ConfigBackground extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      img: window.config.background_img,\n      color: window.config.background_color,\n    };\n  }\n\n  save_changes() {\n    this.props.callback({\n      background_img: this.state.img,\n      background_color: this.state.color,\n    });\n  }\n\n  on_select(e) {\n    let value = e.target.value;\n    this.setState(\n      {\n        img: value === '##other' ? '' : value === '##color' ? null : value,\n      },\n      this.save_changes.bind(this),\n    );\n  }\n  on_change_img(e) {\n    this.setState(\n      {\n        img: e.target.value,\n      },\n      this.save_changes.bind(this),\n    );\n  }\n  on_change_color(e) {\n    this.setState(\n      {\n        color: e.target.value,\n      },\n      this.save_changes.bind(this),\n    );\n  }\n\n  render() {\n    let img_select =\n      this.state.img === null\n        ? '##color'\n        : Object.keys(BUILTIN_IMGS).indexOf(this.state.img) === -1\n        ? '##other'\n        : this.state.img;\n    return (\n      <div>\n        <p>\n          <b>背景图片：</b>\n          <select\n            className=\"config-select\"\n            value={img_select}\n            onChange={this.on_select.bind(this)}\n          >\n            {Object.keys(BUILTIN_IMGS).map((key) => (\n              <option key={key} value={key}>\n                {BUILTIN_IMGS[key]}\n              </option>\n            ))}\n            <option value=\"##other\">输入图片网址……</option>\n            <option value=\"##color\">纯色背景……</option>\n          </select>\n          &nbsp;\n          <small>#background_img</small>&nbsp;\n          {img_select === '##other' && (\n            <input\n              type=\"url\"\n              placeholder=\"图片网址\"\n              value={this.state.img}\n              onChange={this.on_change_img.bind(this)}\n            />\n          )}\n          {img_select === '##color' && (\n            <input\n              type=\"color\"\n              value={this.state.color}\n              onChange={this.on_change_color.bind(this)}\n            />\n          )}\n        </p>\n        <div\n          className=\"bg-preview\"\n          style={bgimg_style(this.state.img, this.state.color)}\n        />\n      </div>\n    );\n  }\n}\n\nclass ConfigColorScheme extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color_scheme: window.config.color_scheme,\n    };\n  }\n\n  save_changes() {\n    this.props.callback({\n      color_scheme: this.state.color_scheme,\n    });\n  }\n\n  on_select(e) {\n    let value = e.target.value;\n    this.setState(\n      {\n        color_scheme: value,\n      },\n      this.save_changes.bind(this),\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          <b>夜间模式：</b>\n          <select\n            className=\"config-select\"\n            value={this.state.color_scheme}\n            onChange={this.on_select.bind(this)}\n          >\n            <option value=\"default\">跟随系统</option>\n            <option value=\"light\">始终浅色模式</option>\n            <option value=\"dark\">始终深色模式</option>\n          </select>\n          &nbsp;<small>#color_scheme</small>\n        </p>\n        <p className=\"config-description\">\n          选择浅色或深色模式，深色模式下将会调暗图片亮度\n        </p>\n      </div>\n    );\n  }\n}\n\nclass ConfigTextArea extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      [props.id]: window.config[props.id],\n    };\n  }\n\n  save_changes() {\n    this.props.callback({\n      [this.props.id]: this.props.sift(this.state[this.props.id]),\n    });\n  }\n\n  on_change(e) {\n    let value = this.props.parse(e.target.value);\n    this.setState(\n      {\n        [this.props.id]: value,\n      },\n      this.save_changes.bind(this),\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <label>\n          <p>\n            <b>{this.props.name}</b>&nbsp;<small>#{this.props.id}</small>\n          </p>\n          <p className=\"config-description\">{this.props.description}</p>\n          <textarea\n            name={'config-' + this.props.id}\n            id={`config-textarea-${this.props.id}`}\n            className=\"config-textarea\"\n            value={this.props.display(this.state[this.props.id])}\n            onChange={this.on_change.bind(this)}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nclass ConfigSwitch extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      switch: window.config[this.props.id],\n    };\n  }\n\n  on_change(e) {\n    let val = e.target.checked;\n    this.setState(\n      {\n        switch: val,\n      },\n      () => {\n        this.props.callback({\n          [this.props.id]: val,\n        });\n      },\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          <label>\n            <input\n              name={'config-' + this.props.id}\n              type=\"checkbox\"\n              checked={this.state.switch}\n              onChange={this.on_change.bind(this)}\n            />\n            &nbsp;<b>{this.props.name}</b>\n            &nbsp;<small>#{this.props.id}</small>\n          </label>\n        </p>\n        <p className=\"config-description\">{this.props.description}</p>\n      </div>\n    );\n  }\n}\n\nexport class ConfigUI extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.save_changes_bound = this.save_changes.bind(this);\n  }\n\n  save_changes(chg) {\n    console.log(chg);\n    Object.keys(chg).forEach((key) => {\n      window.config[key] = chg[key];\n    });\n    save_config(false);\n  }\n\n  reset_settings() {\n    if (window.confirm('重置所有设置？')) {\n      window.config = {};\n      save_config();\n      window.location.reload();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"box config-ui-header\">\n          <p>\n            这些功能仍在测试，可能不稳定（\n            <a onClick={this.reset_settings.bind(this)}>全部重置</a>）\n          </p>\n          <p>\n            <b>\n              部分设置修改后需要{' '}\n              <a\n                onClick={() => {\n                  window.location.reload();\n                }}\n              >\n                刷新页面\n              </a>{' '}\n              方可生效\n            </b>\n          </p>\n        </div>\n        <div className=\"box\">\n          <ConfigBackground\n            id=\"background\"\n            callback={this.save_changes_bound}\n          />\n          <hr />\n          <ConfigColorScheme\n            id=\"color-scheme\"\n            callback={this.save_changes_bound}\n          />\n          <hr />\n          <ConfigSwitch\n            callback={this.save_changes_bound}\n            id=\"block_tmp\"\n            name=\"屏蔽临时帐号\"\n            description=\"屏蔽所有临时帐号的发言\"\n          />\n          <hr />\n          <ConfigTextArea\n            id=\"block_words_v3\"\n            callback={this.save_changes_bound}\n            name=\"设置屏蔽词\"\n            description={'包含屏蔽词的树洞会被折叠，每行写一个屏蔽词'}\n            display={(array) => array.join('\\n')}\n            sift={(array) => array.filter((v) => v)}\n            parse={(string) => string.split('\\n')}\n          />\n          <hr />\n          <ConfigTextArea\n            id=\"whitelist_cw\"\n            callback={this.save_changes_bound}\n            name=\"展开指定的折叠警告\"\n            description={\n              '完全匹配的树洞不会被折叠，每行一个豁免词，也可使用一个星号(\"*\")表示豁免所有'\n            }\n            display={(array) => array.join('\\n')}\n            sift={(array) => array.filter((v) => v)}\n            parse={(string) => string.split('\\n')}\n          />\n          <hr />\n          <ConfigTextArea\n            id=\"ipfs_gateway_list\"\n            callback={this.save_changes_bound}\n            name=\"候选ipfs网关\"\n            description={\n              '<hash>表示要替换的哈希值。下次上传文件会使用第一行的，上传后根据速度调整。'\n            }\n            display={(array) => array.join('\\n')}\n            sift={(array) => array.filter((v) => v)}\n            parse={(string) => string.split('\\n')}\n          />\n          <hr />\n          <ConfigSwitch\n            callback={this.save_changes_bound}\n            id=\"pressure\"\n            name=\"快速返回\"\n            description=\"短暂按住 Esc 键或重压屏幕（3D Touch）可以快速返回或者刷新树洞\"\n          />\n          <hr />\n          <ConfigSwitch\n            callback={this.save_changes_bound}\n            id=\"easter_egg\"\n            name=\"允许彩蛋\"\n            description=\"在某些情况下显示彩蛋\"\n          />\n          <hr />\n          <p>\n            新功能建议或问题反馈请在&nbsp;\n            <a\n              href=\"https://git.thu.monster/newthuhole/hole-backend-rust/issues\"\n              target=\"_blank\"\n            >\n              Gitea\n            </a>\n            &nbsp;提出。\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n","import MarkdownIt from 'markdown-it';\nimport MarkdownItKaTeX from 'markdown-it-katex';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-dark.css';\nimport './Markdown.css';\n\nimport 'katex/dist/katex.min.css';\n\nlet md = new MarkdownIt({\n  html: false,\n  linkify: false,\n  breaks: true,\n  inline: true,\n  highlight(str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return (\n          '<pre class=\"hljs\"><code>' +\n          hljs.highlight(lang, str, true).value +\n          '</code></pre>'\n        );\n      } catch (__) {}\n    }\n    return (\n      '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>'\n    );\n  },\n}).use(MarkdownItKaTeX, {\n  throwOnError: false,\n  errorColor: '#aa0000',\n});\n\nexport default (text) => md.render(text);\n","import React, { Component, PureComponent } from 'react';\nimport { format_time, Time, TitleLine } from './infrastructure/widgets';\nimport HtmlToReact from 'html-to-react';\nimport './Common.css';\nimport {\n  URL_PID_RE,\n  URL_RE,\n  PID_RE,\n  NICKNAME_RE,\n  TAG_RE,\n  split_text,\n} from './text_splitter';\nimport { save_config } from './Config';\nimport renderMd from './Markdown';\n\nexport { format_time, Time, TitleLine };\n\nexport const API_BASE = `${process.env.REACT_APP_BACKEND || '/'}_api/v1`;\n\n// https://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nfunction escape_regex(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nfunction is_video(s) {\n  try {\n    let url = new URL(s);\n    return (\n      url.pathname.endsWith('.mp4') ||\n      url.pathname.endsWith('.mov') ||\n      (url.searchParams.get('filetype') || '').startsWith('video/')\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction is_audio(s) {\n  try {\n    let url = new URL(s);\n    return (\n      url.pathname.endsWith('.mp3') ||\n      (url.searchParams.get('filetype') || '').startsWith('audio/')\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function build_highlight_re(\n  txt,\n  split = ' ',\n  option = 'g',\n  isRegex = false,\n) {\n  if (isRegex) {\n    try {\n      return new RegExp('(' + txt.slice(1, -1) + ')', option);\n    } catch (e) {\n      return /^$/g;\n    }\n  } else {\n    return txt\n      ? new RegExp(\n          `(${txt\n            .split(split)\n            .filter((x) => !!x)\n            .map(escape_regex)\n            .join('|')})`,\n          option,\n        )\n      : /^$/g;\n  }\n}\n\nexport function ColoredSpan(props) {\n  return (\n    <span\n      className=\"colored-span\"\n      style={{\n        '--coloredspan-bgcolor-light': props.colors[0],\n        '--coloredspan-bgcolor-dark': props.colors[1],\n      }}\n    >\n      {props.children}\n    </span>\n  );\n}\n\nfunction normalize_url(url) {\n  return /^https?:\\/\\//.test(url) ? url : 'http://' + url;\n}\n\nfunction stop_loading(e) {\n  e.target.parentNode.classList.remove('loading');\n}\n\n// props: text, show_pid, color_picker, search_param\nexport class HighlightedMarkdown extends Component {\n  render() {\n    const props = this.props;\n    const processDefs = new HtmlToReact.ProcessNodeDefinitions(React);\n    const processInstructions = [\n      {\n        shouldProcessNode: (node) => /^h[123456]$/.test(node.name),\n        processNode(node, children, index) {\n          let currentLevel = +node.name[1];\n          if (currentLevel < 3) currentLevel = 3;\n          const HeadingTag = `h${currentLevel}`;\n          return <HeadingTag key={index}>{children}</HeadingTag>;\n        },\n      },\n      {\n        shouldProcessNode: (node) => node.name === 'img',\n        processNode(node, index) {\n          return (\n            <span className=\"ext-img__warpper loading\">\n              <img\n                src={normalize_url(node.attribs.src)}\n                alt={node.alt}\n                className=\"ext-img\"\n                referrerPolicy=\"no-referrer\"\n                onError={stop_loading}\n                onLoad={stop_loading}\n              />\n            </span>\n          );\n        },\n      },\n      {\n        shouldProcessNode: (node) => node.name === 'a',\n        processNode(node, children, index) {\n          return (\n            <a\n              href={normalize_url(node.attribs.href)}\n              target=\"_blank\"\n              rel=\"noopenner noreferrer\"\n              className=\"ext-link\"\n              key={index}\n            >\n              {children}\n              <span className=\"icon icon-new-tab\" />\n            </a>\n          );\n        },\n      },\n      {\n        shouldProcessNode(node) {\n          return (\n            node.type === 'text' &&\n            (!node.parent ||\n              !node.parent.attribs ||\n              node.parent.attribs['encoding'] !== 'application/x-tex')\n          ); // pid, nickname, search\n        },\n        processNode(node, children, index) {\n          const originalText = node.data;\n          let rules = [\n            ['url_pid', URL_PID_RE],\n            ['url', URL_RE],\n            ['pid', PID_RE],\n            ['nickname', NICKNAME_RE],\n            ['tag', TAG_RE],\n          ];\n          if (props.search_param) {\n            let search_kws = props.search_param.split(' ').filter((s) => !!s);\n            rules.push([\n              'search',\n              new RegExp(\n                `(${search_kws\n                  .map((s) => s.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'))\n                  .join('|')})`,\n                'g',\n              ),\n            ]);\n          }\n          const splitted = split_text(originalText, rules);\n\n          return (\n            <React.Fragment key={index}>\n              {splitted.map(([rule, p], idx) => {\n                return (\n                  <span key={idx}>\n                    {rule === 'url_pid' ? (\n                      <span className=\"url-pid-link\" title={p}>\n                        /##\n                      </span>\n                    ) : rule === 'url' ? (\n                      <>\n                        <a\n                          href={normalize_url(p)}\n                          className=\"ext-link\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          {p}\n                          <span className=\"icon icon-new-tab\" />\n                        </a>\n                        {is_video(p) && (\n                          <video className=\"ext-video\" src={p} controls />\n                        )}\n                        {is_audio(p) && (\n                          <audio className=\"ext-audio\" src={p} controls />\n                        )}\n                      </>\n                    ) : rule === 'pid' ? (\n                      <a\n                        href={'#' + p}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          props.show_pid(p.substring(1));\n                        }}\n                      >\n                        {p}\n                      </a>\n                    ) : rule === 'nickname' ? (\n                      <ColoredSpan colors={props.color_picker.get(p)}>\n                        {p}\n                      </ColoredSpan>\n                    ) : rule === 'search' ? (\n                      <span className=\"search-query-highlight\">{p}</span>\n                    ) : rule === 'tag' ? (\n                      <a href={p}>{p}</a>\n                    ) : (\n                      p\n                    )}\n                  </span>\n                );\n              })}\n            </React.Fragment>\n          );\n        },\n      },\n      {\n        shouldProcessNode: () => true,\n        processNode: processDefs.processDefaultNode,\n      },\n    ];\n    const parser = new HtmlToReact.Parser();\n    let rawMd = props.text;\n    const renderedMarkdown = renderMd(rawMd);\n    return (\n      parser.parseWithInstructions(\n        renderedMarkdown,\n        (node) => node.type !== 'script',\n        processInstructions,\n      ) || null\n    );\n  }\n}\n\nwindow.TEXTAREA_BACKUP = {};\n\nexport class SafeTextarea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n    };\n    this.on_change_bound = this.on_change.bind(this);\n    this.on_keydown_bound = this.on_keydown.bind(this);\n    this.clear = this.clear.bind(this);\n    this.area_ref = React.createRef();\n    this.change_callback = props.on_change || (() => {});\n    this.submit_callback = props.on_submit || (() => {});\n  }\n\n  componentDidMount() {\n    this.setState(\n      {\n        text: window.TEXTAREA_BACKUP[this.props.id] || '',\n      },\n      () => {\n        this.change_callback(this.state.text);\n      },\n    );\n  }\n\n  componentWillUnmount() {\n    window.TEXTAREA_BACKUP[this.props.id] = this.state.text;\n    this.change_callback(this.state.text);\n  }\n\n  on_change(event) {\n    this.setState({\n      text: event.target.value,\n    });\n    this.change_callback(event.target.value);\n  }\n  on_keydown(event) {\n    if (event.key === 'Enter' && event.ctrlKey && !event.altKey) {\n      event.preventDefault();\n      this.submit_callback();\n    }\n  }\n\n  clear() {\n    this.setState({\n      text: '',\n    });\n  }\n  set(text) {\n    this.change_callback(text);\n    this.setState({\n      text: text,\n    });\n  }\n  get() {\n    return this.state.text;\n  }\n  focus() {\n    this.area_ref.current.focus();\n  }\n\n  render() {\n    return (\n      <textarea\n        ref={this.area_ref}\n        onChange={this.on_change_bound}\n        value={this.state.text}\n        onKeyDown={this.on_keydown_bound}\n        maxLength=\"4096\"\n      />\n    );\n  }\n}\n\nlet pwa_prompt_event = null;\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  console.log('pwa: received before install prompt');\n  pwa_prompt_event = e;\n});\n\nexport function PromotionBar(props) {\n  let is_ios = /iPhone|iPad|iPod/i.test(window.navigator.userAgent);\n  let is_installed =\n    window.matchMedia('(display-mode: standalone)').matches ||\n    window.navigator.standalone;\n\n  if (is_installed) return null;\n\n  if (is_ios)\n    // noinspection JSConstructorReturnsPrimitive\n    return !navigator.standalone ? (\n      <div className=\"box promotion-bar\">\n        <span className=\"icon icon-about\" />\n        &nbsp; 用 Safari 把树洞 <b>添加到主屏幕</b> 更好用\n      </div>\n    ) : null;\n  // noinspection JSConstructorReturnsPrimitive\n  else\n    return pwa_prompt_event ? (\n      <div className=\"box promotion-bar\">\n        <span className=\"icon icon-about\" />\n        &nbsp; 把网页版树洞{' '}\n        <b>\n          <a\n            onClick={() => {\n              if (pwa_prompt_event) pwa_prompt_event.prompt();\n            }}\n          >\n            安装到桌面\n          </a>\n        </b>{' '}\n        更好用\n      </div>\n    ) : null;\n}\n\nexport class ClickHandler extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      moved: true,\n      init_y: 0,\n      init_x: 0,\n    };\n    this.on_begin_bound = this.on_begin.bind(this);\n    this.on_move_bound = this.on_move.bind(this);\n    this.on_end_bound = this.on_end.bind(this);\n\n    this.MOVE_THRESHOLD = 3;\n    this.last_fire = 0;\n  }\n\n  on_begin(e) {\n    //console.log('click',(e.touches?e.touches[0]:e).screenY,(e.touches?e.touches[0]:e).screenX);\n    this.setState({\n      moved: false,\n      init_y: (e.touches ? e.touches[0] : e).screenY,\n      init_x: (e.touches ? e.touches[0] : e).screenX,\n    });\n  }\n  on_move(e) {\n    if (!this.state.moved) {\n      let mvmt =\n        Math.abs((e.touches ? e.touches[0] : e).screenY - this.state.init_y) +\n        Math.abs((e.touches ? e.touches[0] : e).screenX - this.state.init_x);\n      //console.log('move',mvmt);\n      if (mvmt > this.MOVE_THRESHOLD)\n        this.setState({\n          moved: true,\n        });\n    }\n  }\n  on_end(event) {\n    //console.log('end');\n    if (!this.state.moved) this.do_callback(event);\n    this.setState({\n      moved: true,\n    });\n  }\n\n  do_callback(event) {\n    if (this.last_fire + 100 > +new Date()) return;\n    this.last_fire = +new Date();\n    this.props.callback(event);\n  }\n\n  render() {\n    return (\n      <div\n        onTouchStart={this.on_begin_bound}\n        onMouseDown={this.on_begin_bound}\n        onTouchMove={this.on_move_bound}\n        onMouseMove={this.on_move_bound}\n        onClick={this.on_end_bound}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport function test_ipfs(hash) {\n  let key = 'testing_' + hash;\n  window[key] = { curr: 0 };\n  window.config.ipfs_gateway_list.forEach((url) => {\n    fetch(url.replaceAll('<hash>', hash), { method: 'HEAD' })\n      .then((res) => {\n        if (res.ok) {\n          console.log(url, 'success!');\n          if (window[key]) {\n            window[key].curr += 1;\n            window[key][url] = window[key].curr;\n            let list = window.config.ipfs_gateway_list;\n            list.sort(\n              (x, y) => (window[key][x] || 9999) - (window[key][y] || 999),\n            );\n            window.config.ipfs_gateway_list = list;\n            save_config(false);\n          }\n        }\n      })\n      .catch((e) => {\n        console.log(url, 'fail!');\n      });\n  });\n}\n","import React, { PureComponent } from 'react';\nimport { Time, API_BASE } from './Common';\nimport { get_json } from './infrastructure/functions';\n\nimport './Message.css';\n\nexport class MessageViewer extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading_status: 'idle',\n      msg: [],\n    };\n    this.input_suf_ref = React.createRef();\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  load() {\n    if (this.state.loading_status === 'loading') return;\n    this.setState(\n      {\n        loading_status: 'loading',\n      },\n      () => {\n        fetch(API_BASE + '/systemlog', {\n          headers: { 'User-Token': this.props.token },\n        })\n          .then(get_json)\n          .then((json) => {\n            this.setState({\n              loading_status: 'done',\n              msg: json.data,\n              start_time: json.start_time,\n              salt: json.salt,\n              tmp_token: json.tmp_token,\n            });\n          })\n          .catch((err) => {\n            console.error(err);\n            alert('' + err);\n            this.setState({\n              loading_status: 'failed',\n            });\n          });\n      },\n    );\n  }\n\n  do_set_token() {\n    if (this.state.loading_status === 'loading') return;\n    if (!this.input_suf_ref.current.value) {\n      alert('不建议后缀为空');\n      return;\n    }\n    let tt = this.state.tmp_token + '_' + this.input_suf_ref.current.value;\n    console.log(tt);\n    localStorage['TOKEN'] = tt;\n    alert('已登录为临时用户，过期后需注销重新登陆');\n    window.location.reload();\n  }\n\n  render() {\n    if (this.state.loading_status === 'loading')\n      return <p className=\"box box-tip\">加载中……</p>;\n    else if (this.state.loading_status === 'failed')\n      return (\n        <div className=\"box box-tip\">\n          <a\n            onClick={() => {\n              this.load();\n            }}\n          >\n            重新加载\n          </a>\n        </div>\n      );\n    else if (this.state.loading_status === 'done')\n      return (\n        <>\n          <br />\n          <p>\n            最近一次重置 <Time stamp={this.state.start_time} short={false} />\n          </p>\n          <p>\n            随机盐 <b>{this.state.salt}</b>\n          </p>\n          <br />\n          <div>\n            <p>15分钟临时token:</p>\n            <div className=\"input-prepend\">{this.state.tmp_token}_ </div>\n            <input\n              type=\"text\"\n              className=\"input-suf\"\n              ref={this.input_suf_ref}\n              placeholder=\"自定义后缀\"\n              maxLength={10}\n            />\n            <button\n              type=\"button\"\n              disabled={this.state.loading_status === 'loading'}\n              onClick={(e) => this.do_set_token()}\n            >\n              使用\n            </button>\n          </div>\n          {this.state.msg.map((msg) => (\n            <div className=\"box\" key={msg.type + msg.timestamp}>\n              <div className=\"box-header\">\n                <Time stamp={msg.timestamp} short={false} />\n                &nbsp; &nbsp;\n                <b>{msg.type}</b>\n                &nbsp;\n                <span className=\"box-header-name\">{msg.user}</span>\n              </div>\n              <div className=\"box-content\">\n                <pre>{msg.detail}</pre>\n              </div>\n            </div>\n          ))}\n        </>\n      );\n    else return null;\n  }\n}\n","const HOLE_CACHE_DB_NAME = 'hole_cache_db';\nconst CACHE_DB_VER = 1;\nconst MAINTENANCE_STEP = 150;\nconst MAINTENANCE_COUNT = 1000;\n\nconst ENC_KEY = 42;\n\nclass Cache {\n  constructor() {\n    this.db = null;\n    this.added_items_since_maintenance = 0;\n    this.encrypt = this.encrypt.bind(this);\n    this.decrypt = this.decrypt.bind(this);\n    const open_req = indexedDB.open(HOLE_CACHE_DB_NAME, CACHE_DB_VER);\n    open_req.onerror = console.error.bind(console);\n    open_req.onupgradeneeded = (event) => {\n      console.log('comment cache db upgrade');\n      const db = event.target.result;\n      const store = db.createObjectStore('comment', {\n        keyPath: 'pid',\n      });\n      store.createIndex('last_access', 'last_access', { unique: false });\n    };\n    open_req.onsuccess = (event) => {\n      console.log('comment cache db loaded');\n      this.db = event.target.result;\n      setTimeout(this.maintenance.bind(this), 1);\n    };\n  }\n\n  // use window.hole_cache.encrypt() only after cache is loaded!\n  encrypt(pid, data) {\n    let s = JSON.stringify(data);\n    let o = '';\n    for (let i = 0, key = (ENC_KEY ^ pid) % 128; i < s.length; i++) {\n      let c = s.charCodeAt(i);\n      let new_key = (key ^ (c / 2)) % 128;\n      o += String.fromCharCode(key ^ s.charCodeAt(i));\n      key = new_key;\n    }\n    return o;\n  }\n\n  // use window.hole_cache.decrypt() only after cache is loaded!\n  decrypt(pid, s) {\n    let o = '';\n    if (typeof s !== typeof 'str') return null;\n\n    for (let i = 0, key = (ENC_KEY ^ pid) % 128; i < s.length; i++) {\n      let c = key ^ s.charCodeAt(i);\n      o += String.fromCharCode(c);\n      key = (key ^ (c / 2)) % 128;\n    }\n\n    try {\n      return JSON.parse(o);\n    } catch (e) {\n      console.error('decrypt failed');\n      console.trace(e);\n      return null;\n    }\n  }\n\n  get(pid, target_version) {\n    pid = parseInt(pid);\n    return new Promise((resolve, reject) => {\n      if (!this.db) return resolve(null);\n      const tx = this.db.transaction(['comment'], 'readwrite');\n      const store = tx.objectStore('comment');\n      const get_req = store.get(pid);\n      get_req.onsuccess = () => {\n        let res = get_req.result;\n        if (!res || !res.data_str) {\n          //console.log('comment cache miss '+pid);\n          resolve(null);\n        } else if (target_version === res.version) {\n          // hit\n          //console.log('comment cache hit', pid);\n          res.last_access = +new Date();\n          store.put(res);\n          let data = this.decrypt(pid, res.data_str);\n          resolve(data); // obj or null\n        } else {\n          // expired\n          console.log(\n            'comment cache expired',\n            pid,\n            ': ver',\n            res.version,\n            'target',\n            target_version,\n          );\n          store.delete(pid);\n          resolve(null);\n        }\n      };\n      get_req.onerror = (e) => {\n        console.warn('comment cache indexeddb open failed');\n        console.error(e);\n        resolve(null);\n      };\n    });\n  }\n\n  put(pid, target_version, data) {\n    pid = parseInt(pid);\n    return new Promise((resolve, reject) => {\n      if (!this.db) return resolve();\n      const tx = this.db.transaction(['comment'], 'readwrite');\n      const store = tx.objectStore('comment');\n      store.put({\n        pid: pid,\n        version: target_version,\n        data_str: this.encrypt(pid, data),\n        last_access: +new Date(),\n      });\n      //console.log('comment cache put', pid);\n      if (++this.added_items_since_maintenance === MAINTENANCE_STEP)\n        setTimeout(this.maintenance.bind(this), 1);\n    });\n  }\n\n  delete(pid) {\n    pid = parseInt(pid);\n    return new Promise((resolve, reject) => {\n      if (!this.db) return resolve();\n      const tx = this.db.transaction(['comment'], 'readwrite');\n      const store = tx.objectStore('comment');\n      let req = store.delete(pid);\n      console.log('comment cache delete', pid);\n      req.onerror = () => {\n        console.warn('comment cache delete failed ', pid);\n        return resolve();\n      };\n      req.onsuccess = () => resolve();\n    });\n  }\n\n  maintenance() {\n    if (!this.db) return;\n    const tx = this.db.transaction(['comment'], 'readwrite');\n    const store = tx.objectStore('comment');\n    let count_req = store.count();\n    count_req.onsuccess = () => {\n      let count = count_req.result;\n      if (count > MAINTENANCE_COUNT) {\n        console.log('comment cache db maintenance', count);\n        store.index('last_access').openKeyCursor().onsuccess = (e) => {\n          let cur = e.target.result;\n          if (cur) {\n            //console.log('maintenance: delete',cur);\n            store.delete(cur.primaryKey);\n            if (--count > MAINTENANCE_COUNT) cur.continue();\n          }\n        };\n      } else {\n        console.log('comment cache db no need to maintenance', count);\n      }\n      this.added_items_since_maintenance = 0;\n    };\n    count_req.onerror = console.error.bind(console);\n  }\n\n  clear() {\n    if (!this.db) return;\n    indexedDB.deleteDatabase(HOLE_CACHE_DB_NAME);\n    console.log('delete comment cache db');\n  }\n}\n\nexport function cache() {\n  if (!window.hole_cache) window.hole_cache = new Cache();\n  return window.hole_cache;\n}\n","import { get_json, gen_name } from './infrastructure/functions';\nimport { API_BASE } from './Common';\nimport { cache } from './cache';\n\nexport { get_json };\n\nconst SEARCH_PAGESIZE = 50;\n\nconst handle_response = async (response, notify = false) => {\n  let json = await get_json(response);\n  if (json.code !== 0) {\n    if (json.msg) {\n      if (notify) {\n        alert(json.msg);\n      } else {\n        throw new Error(json.msg);\n      }\n    } else {\n      throw new Error(JSON.stringify(json));\n    }\n  }\n  return json;\n};\n\nexport const parse_replies = (replies, color_picker) =>\n  replies\n    .sort((a, b) => parseInt(a.cid, 10) - parseInt(b.cid, 10))\n    .map((info) => {\n      info.name = gen_name(info.name_id);\n      info._display_color = color_picker.get(info.name, info.is_tmp);\n      info.variant = {};\n      return info;\n    });\n\nexport const API = {\n  load_replies: async (pid, token, color_picker, cache_version) => {\n    pid = parseInt(pid);\n    let response = await fetch(API_BASE + '/getcomment?pid=' + pid, {\n      headers: {\n        'User-Token': token,\n      },\n    });\n    let json = await handle_response(response);\n    // Why delete then put ??\n    //console.log('Put cache', json, pid, cache_version);\n    cache().put(pid, cache_version, json);\n    json.data = parse_replies(json.data, color_picker);\n    return json;\n  },\n\n  load_replies_with_cache: async (pid, token, color_picker, cache_version) => {\n    pid = parseInt(pid);\n    let json = await cache().get(pid, cache_version);\n    //console.log('Get Cache', json, pid, cache_version);\n    if (json) {\n      //console.log('cache.data', json.data);\n      json.data = parse_replies(json.data, color_picker);\n      return { data: json, cached: true };\n    } else {\n      //console.log('Cache fail, new fetch');\n      json = await API.load_replies(pid, token, color_picker, cache_version);\n      return { data: json, cached: !json };\n    }\n  },\n\n  set_attention: async (pid, attention, token) => {\n    let data = new URLSearchParams();\n    data.append('pid', pid);\n    data.append('switch', attention ? '1' : '0');\n    let response = await fetch(API_BASE + '/attention', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': token,\n      },\n      body: data,\n    });\n    // Delete cache to update `attention` on next reload\n    cache().delete(pid);\n    return handle_response(response, false);\n  },\n\n  report: async (pid, reason, token) => {\n    let data = new URLSearchParams();\n    data.append('pid', pid);\n    data.append('reason', reason);\n    let response = await fetch(API_BASE + '/report', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': token,\n      },\n      body: data,\n    });\n    return handle_response(response, false);\n  },\n\n  block: async (type, id, token) => {\n    let data = new URLSearchParams([\n      ['type', type],\n      ['id', id],\n    ]);\n    let response = await fetch(API_BASE + '/block', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': token,\n      },\n      body: data,\n    });\n    return handle_response(response, false);\n  },\n\n  del: async (type, id, note, token) => {\n    let data = new URLSearchParams();\n    data.append('type', type);\n    data.append('id', id);\n    data.append('note', note);\n    let response = await fetch(API_BASE + '/delete', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': token,\n      },\n      body: data,\n    });\n    return handle_response(response, false);\n  },\n\n  update_cw: async (cw, id, token) => {\n    let data = new URLSearchParams();\n    data.append('cw', cw);\n    data.append('pid', id);\n    let response = await fetch(API_BASE + '/editcw', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': token,\n      },\n      body: data,\n    });\n    return handle_response(response, false);\n  },\n\n  get_list: async (page, token, submode) => {\n    let response = await fetch(\n      `${API_BASE}/getlist?p=${page}&order_mode=${submode}`,\n      {\n        headers: { 'User-Token': token },\n      },\n    );\n    return handle_response(response);\n  },\n\n  get_search: async (page, keyword, token, submode) => {\n    let response = await fetch(\n      `${API_BASE}/search?search_mode=${submode}&page=${page}&keywords=${encodeURIComponent(\n        keyword,\n      )}&pagesize=${SEARCH_PAGESIZE}`,\n      {\n        headers: { 'User-Token': token },\n      },\n    );\n    return handle_response(response);\n  },\n\n  get_single: async (pid, token) => {\n    let response = await fetch(API_BASE + '/getone?pid=' + pid, {\n      headers: { 'User-Token': token },\n    });\n    return handle_response(response);\n  },\n\n  get_attention: async (token) => {\n    let response = await fetch(API_BASE + '/getattention', {\n      headers: { 'User-Token': token },\n    });\n    return handle_response(response);\n  },\n\n  add_vote: async (vote, pid, token) => {\n    let data = new URLSearchParams([\n      ['vote', vote],\n      ['pid', pid],\n    ]);\n    let response = await fetch(API_BASE + '/vote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': token,\n      },\n      body: data,\n    });\n    return handle_response(response, true);\n  },\n\n  get_multi: async (pids, token) => {\n    let response = await fetch(\n      API_BASE + '/getmulti?' + pids.map((pid) => `pids=${pid}`).join('&'),\n      {\n        headers: {\n          'User-Token': token,\n        },\n      },\n    );\n    return handle_response(response, true);\n  },\n\n  set_title: async (title, token) => {\n    console.log('title: ', title);\n    let data = new URLSearchParams([['title', title]]);\n    let response = await fetch(API_BASE + '/title', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': token,\n      },\n      body: data,\n    });\n    return handle_response(response, true);\n  },\n};\n","export function load_attentions() {\n  window.saved_attentions = JSON.parse(\n    localStorage['saved_attentions'] || '[]',\n  );\n}\n\nexport function save_attentions() {\n  localStorage['saved_attentions'] = JSON.stringify(window.saved_attentions);\n}\n","import React, { Component } from 'react';\nimport {\n  API_BASE,\n  SafeTextarea,\n  PromotionBar,\n  HighlightedMarkdown,\n  test_ipfs,\n} from './Common';\nimport { MessageViewer } from './Message';\nimport { LoginPopup } from './infrastructure/widgets';\nimport { ColorPicker } from './color_picker';\nimport { ConfigUI } from './Config';\nimport copy from 'copy-to-clipboard';\nimport { cache } from './cache';\nimport { get_json } from './flows_api';\nimport { save_attentions } from './Attention';\n\nimport './UserAction.css';\n\nconst REPOSITORY = 'https://git.thu.monster/newthuhole/';\nconst EMAIL = 'hole_thu@riseup.net';\n\nexport const TokenCtx = React.createContext({\n  value: null,\n  set_value: () => {},\n});\n\nexport function InfoSidebar(props) {\n  return (\n    <div>\n      <PromotionBar />\n      <LoginForm show_sidebar={props.show_sidebar} />\n      <div className=\"box list-menu\">\n        <a href=\"/about.html\" target=\"_blank\">\n          <span className=\"icon icon-about\" />\n          <label>关于</label>\n        </a>\n        &nbsp;&nbsp;\n        <a\n          onClick={() => {\n            props.show_sidebar('设置', <ConfigUI />);\n          }}\n        >\n          <span className=\"icon icon-settings\" />\n          <label>本地设置</label>\n        </a>\n        &nbsp;&nbsp;\n        <a href=\"/policy.html\" target=\"_blank\">\n          <span className=\"icon icon-textfile\" />\n          <label>树洞规范（试行）</label>\n        </a>\n        <p>\n          <em>强烈建议开始使用前先看一遍所有设置选项</em>\n        </p>\n      </div>\n      <div className=\"box help-desc-box\">\n        <p>\n          <a\n            onClick={() => {\n              if ('serviceWorker' in navigator) {\n                navigator.serviceWorker\n                  .getRegistrations()\n                  .then((registrations) => {\n                    for (let registration of registrations) {\n                      console.log('unregister', registration);\n                      registration.unregister();\n                    }\n                  });\n              }\n              cache().clear();\n              setTimeout(() => {\n                window.location.reload(true);\n              }, 200);\n            }}\n          >\n            强制检查更新\n          </a>\n          （当前版本：【{process.env.REACT_APP_BUILD_INFO || '---'}{' '}\n          {process.env.NODE_ENV}】 会自动在后台检查更新并在下次访问时更新）\n        </p>\n      </div>\n      <div className=\"box help-desc-box\">\n        <p>意见反馈请加tag #意见反馈 或到github后端的issue区。</p>\n        <p>\n          新T树洞强烈期待有其他更多树洞的出现，一起分布式互联，构建清华树洞族。详情见\n          关于 中的描述。\n        </p>\n        <p>\n          联系我们：<a href={'mailto:' + EMAIL}>{EMAIL}</a> 。\n        </p>\n      </div>\n      <div className=\"box help-desc-box\">\n        <p>\n          新T树洞 网页版 by @hole_thu，基于\n          <a href=\"https://www.gnu.org/licenses/agpl-3.0.html\" target=\"_blank\">\n            AGPLv3\n          </a>\n          协议在{' '}\n          <a href={REPOSITORY} target=\"_blank\">\n            Gitea\n          </a>{' '}\n          开源。\n        </p>\n        <p>\n          新T树洞 网页版基于\n          <a\n            href=\"https://github.com/pkuhelper-web/webhole\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            P大树洞网页版 by @xmcp\n          </a>\n          、\n          <a\n            href=\"https://github.com/thuhole/webhole\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            T大树洞网页版 by @thuhole\n          </a>\n          、{' '}\n          <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"noopener\">\n            React\n          </a>\n          、\n          <a href=\"https://icomoon.io/#icons\" target=\"_blank\" rel=\"noopener\">\n            IcoMoon\n          </a>\n          等开源项目。\n        </p>\n        <hr />\n        <p>\n          新T树洞 后端 by @hole_thu，基于\n          <a href=\"http://www.wtfpl.net/about/\" target=\"_blank\">\n            WTFPLv2\n          </a>\n          协议在{' '}\n          <a href={REPOSITORY} target=\"_blank\">\n            Gitea\n          </a>{' '}\n          开源。\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      custom_title: window.TITLE || '',\n      auto_block_rank: window.AUTO_BLCOK || 2,\n    };\n  }\n\n  update_title(title, token) {\n    if (title === window.TITLE) {\n      alert('无变化');\n      return;\n    }\n    let data = new FormData();\n    data.append('title', title);\n    fetch(API_BASE + '/title', {\n      method: 'POST',\n      headers: { 'User-Token': token },\n      body: data,\n    })\n      .then(get_json)\n      .then((j) => {\n        if (j.code !== 0) {\n          throw new Error(j.msg);\n        }\n        window.TITLE = title;\n        alert('专属头衔设置成功');\n      })\n      .catch((err) => alert('设置头衔出错了:\\n' + err));\n  }\n\n  update_auto_block(rank, token) {\n    let data = new FormData();\n    data.append('rank', rank);\n    fetch(API_BASE + '/auto_block', {\n      method: 'POST',\n      headers: { 'User-Token': token },\n      body: data,\n    })\n      .then(get_json)\n      .then((j) => {\n        if (j.code !== 0) {\n          throw new Error(j.msg);\n        }\n        window.AUTO_BLCOK = rank;\n        alert('设置自动拉黑阈值成功');\n      })\n      .catch((err) => alert('设置自动拉黑出错了:\\n' + err));\n  }\n\n  copy_token(token) {\n    if (copy(token)) alert('复制成功！\\n请一定不要泄露哦');\n  }\n\n  render() {\n    return (\n      <TokenCtx.Consumer>\n        {(token) => (\n          <div>\n            {/*{!!token.value &&*/}\n            {/*    <LifeInfoBox token={token.value} set_token={token.set_value} />*/}\n            {/*}*/}\n            <div className=\"login-form box\">\n              {token.value ? (\n                <div>\n                  <p>\n                    <b>您已登录。</b>\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        token.set_value(null);\n                      }}\n                    >\n                      <span className=\"icon icon-logout\" /> 注销\n                    </button>\n                    <br />\n                  </p>\n                  <p>\n                    <a\n                      onClick={() => {\n                        this.props.show_sidebar(\n                          '系统日志',\n                          <MessageViewer token={token.value} />,\n                        );\n                      }}\n                    >\n                      查看系统日志\n                    </a>\n                    <br />\n                    举报记录、管理日志等都是公开的。\n                  </p>\n                  <p>\n                    <a onClick={this.copy_token.bind(this, token.value)}>\n                      复制 User Token\n                    </a>\n                    <br />\n                    User\n                    Token仅用于开发bot，切勿告知他人。若怀疑被盗号请刷新Token(刷新功能即将上线)。\n                  </p>\n                  <p>\n                    专属头衔：\n                    <input\n                      value={this.state.custom_title}\n                      onChange={(e) => {\n                        this.setState({ custom_title: e.target.value });\n                      }}\n                      maxLength={10}\n                    />\n                    <button\n                      className=\"update-title-btn\"\n                      type=\"button\"\n                      onClick={(e) => {\n                        this.update_title(this.state.custom_title, token.value);\n                      }}\n                      disabled={!this.state.custom_title}\n                    >\n                      提交\n                    </button>\n                    <br />\n                    设置专属头衔后，可在发言时选择使用。重置后需重新设置。临时用户如需保持头衔请使用相同后缀。\n                  </p>\n                  <p>\n                    自动拉黑阈值:\n                    <span style={{ display: 'inline-block', width: '3rem' }}>\n                      <b>{this.state.auto_block_rank * 5}</b>\n                    </span>\n                    <input\n                      value={this.state.auto_block_rank}\n                      type=\"range\"\n                      min=\"1\"\n                      max=\"10\"\n                      list=\"autoBlock\"\n                      onChange={(e) => {\n                        this.setState({ auto_block_rank: e.target.value });\n                      }}\n                    />\n                    <button\n                      className=\"update-title-btn\"\n                      type=\"button\"\n                      onClick={(e) => {\n                        this.update_auto_block(\n                          this.state.auto_block_rank,\n                          token.value,\n                        );\n                      }}\n                    >\n                      提交\n                    </button>\n                    <datalist id=\"autoBlock\">\n                      <option>1</option>\n                      <option>2</option>\n                      <option>3</option>\n                    </datalist>\n                    <br />\n                    自动不展示被拉黑次数较多用户发布的内容，包括自己。对每个洞及其评论的可见性会有1小时缓存，频繁修改无效。\n                  </p>\n                </div>\n              ) : (\n                <LoginPopup token_callback={token.set_value}>\n                  {(do_popup) => (\n                    <div>\n                      <p>\n                        <button type=\"button\" onClick={do_popup}>\n                          <span className=\"icon icon-login\" />\n                          &nbsp;登录\n                        </button>\n                      </p>\n                      <p>\n                        <small>\n                          新T树洞\n                          面向T大学生，通过已验证身份的第三方服务授权登陆。\n                        </small>\n                      </p>\n                    </div>\n                  )}\n                </LoginPopup>\n              )}\n            </div>\n          </div>\n        )}\n      </TokenCtx.Consumer>\n    );\n  }\n}\n\nexport class ReplyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      loading_status: 'done',\n      preview: false,\n      use_title: false,\n    };\n    this.on_change_bound = this.on_change.bind(this);\n    this.on_use_title_change_bound = this.on_use_title_change.bind(this);\n    this.area_ref = this.props.area_ref || React.createRef();\n    this.global_keypress_handler_bound = this.global_keypress_handler.bind(\n      this,\n    );\n    this.color_picker = new ColorPicker();\n  }\n\n  global_keypress_handler(e) {\n    if (\n      e.code === 'Enter' &&\n      !e.ctrlKey &&\n      !e.altKey &&\n      ['input', 'textarea'].indexOf(e.target.tagName.toLowerCase()) === -1\n    ) {\n      if (this.area_ref.current) {\n        e.preventDefault();\n        this.area_ref.current.focus();\n      }\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keypress', this.global_keypress_handler_bound);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\n      'keypress',\n      this.global_keypress_handler_bound,\n    );\n  }\n\n  on_change(value) {\n    this.setState({\n      text: value,\n    });\n  }\n\n  on_use_title_change(event) {\n    this.setState({\n      use_title: event.target.checked,\n    });\n  }\n\n  on_submit(event) {\n    if (event) event.preventDefault();\n    if (this.state.loading_status === 'loading') return;\n    if (!this.state.text) return;\n    this.setState({\n      loading_status: 'loading',\n    });\n\n    const { pid } = this.props;\n    const { text, use_title } = this.state;\n    let data = new URLSearchParams({\n      pid: pid,\n      text: text,\n      use_title: use_title ? '1' : '',\n    });\n    fetch(API_BASE + '/docomment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': this.props.token,\n      },\n      body: data,\n    })\n      .then(get_json)\n      .then((json) => {\n        if (json.code !== 0) {\n          throw new Error(json.msg);\n        }\n\n        let saved_attentions = window.saved_attentions;\n        if (!saved_attentions.includes(pid)) {\n          saved_attentions.unshift(pid);\n          window.saved_attentions = saved_attentions;\n          save_attentions();\n        }\n\n        this.setState({\n          loading_status: 'done',\n          text: '',\n          preview: false,\n        });\n        this.area_ref.current.clear();\n        this.props.on_complete();\n      })\n      .catch((e) => {\n        console.error(e);\n        alert('回复失败\\n' + e);\n        this.setState({\n          loading_status: 'done',\n        });\n      });\n  }\n\n  toggle_preview() {\n    this.setState({\n      preview: !this.state.preview,\n    });\n  }\n\n  render() {\n    return (\n      <form\n        onSubmit={this.on_submit.bind(this)}\n        className={'reply-form box' + (this.state.text ? ' reply-sticky' : '')}\n      >\n        {this.state.preview ? (\n          <div className=\"reply-preview\">\n            <HighlightedMarkdown\n              text={this.state.text}\n              color_picker={this.color_picker}\n              show_pid={() => {}}\n            />\n          </div>\n        ) : (\n          <SafeTextarea\n            ref={this.area_ref}\n            id={this.props.pid}\n            on_change={this.on_change_bound}\n            on_submit={this.on_submit.bind(this)}\n          />\n        )}\n        <div className=\"reply-form-opt-box\">\n          <div className=\"reply-form-buttons\">\n            <button\n              type=\"button\"\n              onClick={() => {\n                this.toggle_preview();\n              }}\n            >\n              {this.state.preview ? (\n                <span className=\"icon icon-eye-blocked\" />\n              ) : (\n                <span className=\"icon icon-eye\" />\n              )}\n            </button>\n            {this.state.loading_status === 'loading' ? (\n              <button disabled=\"disabled\">\n                <span className=\"icon icon-loading\" />\n              </button>\n            ) : (\n              <button type=\"submit\">\n                <span className=\"icon icon-send\" />\n              </button>\n            )}\n          </div>\n          {window.TITLE && (\n            <label>\n              <input\n                type=\"checkbox\"\n                onChange={this.on_use_title_change_bound}\n                checked={this.state.use_title}\n              />{' '}\n              使用头衔\n            </label>\n          )}\n        </div>\n      </form>\n    );\n  }\n}\n\nexport class PostForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      upload_progress_text: '',\n      is_loading: false,\n      file_name: '',\n      file_type: '',\n      cw: window.CW_BACKUP || '',\n      allow_search: window.AS_BACKUP || false,\n      loading_status: 'done',\n      preview: false,\n      has_poll: !!window.POLL_BACKUP,\n      poll_options: JSON.parse(window.POLL_BACKUP || '[\"\"]'),\n      use_title: false,\n    };\n    this.area_ref = React.createRef();\n    this.on_change_bound = this.on_change.bind(this);\n    this.on_allow_search_change_bound = this.on_allow_search_change.bind(this);\n    this.on_use_title_change_bound = this.on_use_title_change.bind(this);\n    this.on_cw_change_bound = this.on_cw_change.bind(this);\n    this.on_poll_option_change_bound = this.on_poll_option_change.bind(this);\n    this.color_picker = new ColorPicker();\n  }\n\n  componentDidMount() {\n    if (this.area_ref.current) this.area_ref.current.focus();\n  }\n\n  componentWillUnmount() {\n    const { cw, allow_search, has_poll, poll_options } = this.state;\n    window.CW_BACKUP = cw;\n    window.AS_BACKUP = allow_search;\n    localStorage['DEFAULT_ALLOW_SEARCH'] = allow_search ? '1' : '';\n    window.POLL_BACKUP = has_poll ? JSON.stringify(poll_options) : null;\n  }\n\n  on_allow_search_change(event) {\n    this.setState({\n      allow_search: event.target.checked,\n    });\n  }\n\n  on_use_title_change(event) {\n    this.setState({\n      use_title: event.target.checked,\n    });\n  }\n\n  on_cw_change(event) {\n    this.setState({\n      cw: event.target.value,\n    });\n  }\n\n  on_change(value) {\n    this.setState({\n      text: value,\n    });\n  }\n\n  do_post() {\n    const {\n      cw,\n      text,\n      allow_search,\n      use_title,\n      has_poll,\n      poll_options,\n    } = this.state;\n    let data = new URLSearchParams({\n      cw: cw,\n      text: text,\n      allow_search: allow_search ? '1' : '',\n      use_title: use_title ? '1' : '',\n      type: 'text',\n    });\n    if (has_poll) {\n      poll_options.forEach((opt) => {\n        if (opt) data.append('poll_options', opt);\n      });\n    }\n\n    fetch(API_BASE + '/dopost', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'User-Token': this.props.token,\n      },\n      body: data,\n    })\n      .then(get_json)\n      .then((json) => {\n        if (json.code !== 0) {\n          throw new Error(json.msg);\n        }\n\n        this.setState({\n          loading_status: 'done',\n          text: '',\n          preview: false,\n        });\n        this.area_ref.current.clear();\n        this.props.on_complete();\n        window.CW_BACKUP = '';\n        window.POLL_BACKUP = null;\n      })\n      .catch((e) => {\n        console.error(e);\n        alert('发表失败\\n' + e);\n        this.setState({\n          loading_status: 'done',\n        });\n      });\n  }\n\n  on_submit(event) {\n    if (event) event.preventDefault();\n    if (this.state.loading_status === 'loading') return;\n    if (!this.state.text) return;\n    {\n      this.setState({\n        loading_status: 'loading',\n      });\n      this.do_post();\n    }\n  }\n\n  toggle_preview() {\n    this.setState({\n      preview: !this.state.preview,\n    });\n  }\n\n  on_poll_option_change(event, idx) {\n    let poll_options = this.state.poll_options;\n    let text = event.target.value;\n    poll_options[idx] = text;\n    if (!text && poll_options.length > 1) {\n      poll_options.splice(idx, 1);\n    }\n    if (poll_options[poll_options.length - 1] && poll_options.length < 8) {\n      poll_options.push('');\n    }\n    this.setState({ poll_options: poll_options });\n  }\n\n  on_file_change(event) {\n    console.log(event);\n    let f = event.target.files[0];\n    if (f) {\n      console.log(f);\n      this.setState({ is_loading: true, file_name: f.name, file_type: f.type });\n      // let data = new FormData();\n      // data.append('file', f);\n\n      var xh = new XMLHttpRequest();\n      xh.upload.addEventListener(\n        'progress',\n        this.upload_progress.bind(this),\n        false,\n      );\n      xh.addEventListener('load', this.upload_complete.bind(this), false);\n      xh.addEventListener('error', this.upload_error.bind(this), false);\n      xh.addEventListener('abort', this.upload_abort.bind(this), false);\n      xh.open('POST', API_BASE + '/upload');\n      xh.setRequestHeader('User-Token', this.props.token);\n      xh.send(f);\n    }\n  }\n\n  update_text_after_upload(data) {\n    const { file_name, file_type } = this.state;\n    let url =\n      (window.config.ipfs_gateway_list[0] || '<hash>(无ipfs网关)').replaceAll(\n        '<hash>',\n        data.hash,\n      ) +\n      `?filename=${encodeURIComponent(file_name)}&filetype=${encodeURIComponent(\n        file_type,\n      )}`;\n    test_ipfs(data.hash);\n    let new_text =\n      this.state.text +\n      '\\n' +\n      (file_type.startsWith('image/') ? `![](${url})` : url) +\n      ` [加载失败请点击此](${window.location.origin}/ipfs.html#${data.hash})\\n\\n---\\n`;\n    this.setState({ text: new_text });\n    this.area_ref.current.set(new_text);\n  }\n\n  upload_progress(event) {\n    console.log(event.loaded, event.total);\n    this.setState({\n      upload_progress_text: `${((event.loaded * 100) / event.total).toFixed(\n        2,\n      )}%`,\n    });\n  }\n\n  upload_complete(event) {\n    try {\n      let j = JSON.parse(event.target.responseText);\n      if (j.code != 0) {\n        alert(j.msg);\n        throw new Error();\n      }\n      this.update_text_after_upload(j.data);\n      this.setState({ is_loading: false });\n    } catch (e) {\n      console.log(e);\n      this.upload_error(event);\n    }\n  }\n\n  upload_error(event) {\n    alert(\n      '上传失败\\n' +\n        (event.target.responseText.length < 100\n          ? event.target.responseText\n          : event.target.status),\n    );\n    this.setState({ is_loading: false });\n  }\n\n  upload_abort(event) {\n    alert('上传已中断');\n    this.setState({ is_loading: false });\n  }\n\n  render() {\n    const {\n      has_poll,\n      poll_options,\n      preview,\n      loading_status,\n      upload_progress_text,\n      is_loading,\n      file_name,\n    } = this.state;\n    return (\n      <form onSubmit={this.on_submit.bind(this)} className=\"post-form box\">\n        <div className=\"post-form-bar\">\n          <div>\n            {preview ? (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.toggle_preview();\n                }}\n              >\n                <span className=\"icon icon-eye-blocked\" />\n                &nbsp;编辑\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.toggle_preview();\n                }}\n              >\n                <span className=\"icon icon-eye\" />\n                &nbsp;预览\n              </button>\n            )}\n\n            {loading_status !== 'done' ? (\n              <button disabled=\"disabled\">\n                <span className=\"icon icon-loading\" />\n                &nbsp;上传\n              </button>\n            ) : (\n              <button type=\"submit\">\n                <span className=\"icon icon-send\" />\n                &nbsp;发表\n              </button>\n            )}\n          </div>\n          <div className=\"checkbox-bar\">\n            <label>\n              <input\n                type=\"checkbox\"\n                onChange={this.on_allow_search_change_bound}\n                checked={this.state.allow_search}\n              />{' '}\n              允许搜索\n            </label>\n            {window.TITLE && (\n              <label>\n                <input\n                  type=\"checkbox\"\n                  onChange={this.on_use_title_change_bound}\n                  checked={this.state.use_title}\n                />{' '}\n                使用头衔\n              </label>\n            )}\n          </div>\n        </div>\n        {preview ? (\n          <div className=\"post-preview\">\n            <HighlightedMarkdown\n              text={this.state.text}\n              color_picker={this.color_picker}\n              show_pid={() => {}}\n            />\n          </div>\n        ) : (\n          <>\n            <span>上传并插入文件: </span>\n            <input\n              className=\"file-input\"\n              type=\"file\"\n              name=\"file\"\n              onChange={this.on_file_change.bind(this)}\n              disabled={is_loading}\n            />\n            {is_loading && (\n              <p>\n                <small>\n                  上传 <i>{file_name}</i> 中: {upload_progress_text}\n                </small>\n              </p>\n            )}\n            <input\n              type=\"text\"\n              placeholder=\"折叠警告(留空表示不折叠)\"\n              value={this.state.cw}\n              id=\"post_cw\"\n              className=\"spoiler-input\"\n              onChange={this.on_cw_change_bound}\n              maxLength=\"32\"\n            />\n            <SafeTextarea\n              ref={this.area_ref}\n              id=\"new_post\"\n              on_change={this.on_change_bound}\n              on_submit={this.on_submit.bind(this)}\n            />\n          </>\n        )}\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ has_poll: !has_poll });\n          }}\n        >\n          {has_poll ? '取消' : '添加'}投票\n        </button>\n\n        {has_poll && (\n          <div className=\"post-form-poll-options\">\n            <h6>投票选项</h6>\n            {poll_options.map((option, idx) => (\n              <input\n                key={idx}\n                type=\"text\"\n                value={option}\n                placeholder=\"输入以添加选项...\"\n                onChange={(e) => this.on_poll_option_change_bound(e, idx)}\n                maxLength=\"32\"\n              />\n            ))}\n          </div>\n        )}\n        <br />\n        <br />\n        <br />\n        <p>\n          <small>\n            请遵守\n            <a href=\"/policy.html\" target=\"_blank\">\n              树洞管理规范（试行）\n            </a>\n            ，文明发言。\n          </small>\n        </p>\n        <p>\n          <small>\n            首选ipfs网关可以在设置中修改，如效果不佳仍可使用图床，例如：\n            <a href=\"https://imgtu.com/\" target=\"_blank\">\n              路过图床\n            </a>\n            、\n            <a href=\"https://sm.ms/\" target=\"_blank\">\n              sm.ms\n            </a>\n            、\n            <a\n              href=\"https://bbs.pku.edu.cn/v2/post-read.php?bid=154&threadid=3743\"\n              target=\"_blank\"\n            >\n              未名BBS\n            </a>\n            、\n            <a href=\"https://zhuanlan.zhihu.com/write\" target=\"_blank\">\n              知乎\n            </a>\n            。\n          </small>\n        </p>\n      </form>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport copy from 'copy-to-clipboard';\nimport { ColorPicker } from './color_picker';\nimport { split_text, PID_RE } from './text_splitter';\nimport {\n  format_time,\n  Time,\n  TitleLine,\n  ClickHandler,\n  ColoredSpan,\n  HighlightedMarkdown,\n} from './Common';\nimport './Flows.css';\nimport LazyLoad, { forceCheck } from 'react-lazyload';\nimport { TokenCtx, ReplyForm } from './UserAction';\nimport { API, parse_replies } from './flows_api';\nimport { cache } from './cache';\nimport { save_attentions } from './Attention';\nimport Poll from 'react-polls';\n\n/*\nconst IMAGE_BASE = 'https://thimg.yecdn.com/';\nconst IMAGE_BAK_BASE = 'https://img2.thuhole.com/';\n*/\n\nconst CLICKABLE_TAGS = { a: true, audio: true };\nconst PREVIEW_REPLY_COUNT = 10;\n// const QUOTE_BLACKLIST=['23333','233333','66666','666666','10086','10000','100000','99999','999999','55555','555555'];\nconst QUOTE_BLACKLIST = [];\n\nwindow.LATEST_POST_ID = parseInt(localStorage['_LATEST_POST_ID'], 10) || 0;\n\nconst DZ_NAME = '洞主';\n\nfunction check_block(info) {\n  return (\n    ((window.config.block_tmp && info.is_tmp) ||\n      window.config.block_words_v3.some((word) => info.text.includes(word))) &&\n    !info.can_del\n  );\n}\n\nfunction load_single_meta(show_sidebar, token) {\n  return async (pid, replace = false) => {\n    let color_picker = new ColorPicker();\n    let title_elem = '树洞 #' + pid;\n    show_sidebar(\n      title_elem,\n      <div className=\"box box-tip\">正在加载 #{pid}</div>,\n      replace ? 'replace' : 'push',\n    );\n    try {\n      let single = await API.get_single(pid, token);\n      single.data.variant = {};\n      let { data: replies } = await API.load_replies_with_cache(\n        pid,\n        token,\n        color_picker,\n        parseInt(single.data.reply),\n      );\n      show_sidebar(\n        title_elem,\n        <FlowSidebar\n          key={+new Date()}\n          info={single.data}\n          replies={replies.data}\n          attention={replies.attention}\n          token={token}\n          show_sidebar={show_sidebar}\n          color_picker={color_picker}\n          deletion_detect={localStorage['DELETION_DETECT'] === 'on'}\n        />,\n        'replace',\n      );\n    } catch (e) {\n      console.error(e);\n      show_sidebar(\n        title_elem,\n        <div className=\"box box-tip\">\n          <p>\n            <a onClick={() => load_single_meta(show_sidebar, token)(pid, true)}>\n              重新加载\n            </a>\n          </p>\n          <p>{'' + e}</p>\n        </div>,\n        'replace',\n      );\n    }\n  };\n}\n\nclass Reply extends PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      info,\n      color_picker,\n      show_pid,\n      do_filter_name,\n      do_delete,\n      do_report,\n      do_block,\n      search_param,\n    } = this.props;\n    const author = info.name,\n      replyText = info.text,\n      has_block_words = check_block(info);\n    this.color_picker = new ColorPicker();\n    return (\n      <div\n        className={'flow-reply box'}\n        style={\n          info._display_color\n            ? {\n                '--box-bgcolor-light': info._display_color[0],\n                '--box-bgcolor-dark': info._display_color[1],\n              }\n            : null\n        }\n      >\n        <div className=\"box-header\">\n          {!!do_filter_name && (\n            <span\n              className=\"reply-header-badge clickable\"\n              onClick={() => {\n                do_filter_name(info.name);\n              }}\n            >\n              <span className=\"icon icon-locate\" />\n            </span>\n          )}\n          &nbsp;\n          {<span className=\"box-header-name\">{info.name}</span>}\n          {info.author_title && (\n            <span className=\"box-header-name author-title\">{`\"${info.author_title}\"`}</span>\n          )}\n          {info.is_tmp && (\n            <span className=\"box-header-name tmp-title\">临时账号</span>\n          )}\n          {!!do_delete && !!info.can_del && (\n            <span\n              className=\"clickable\"\n              onClick={() => {\n                do_delete('cid', info.cid);\n              }}\n            >\n              {' '}\n              🗑️{' '}\n            </span>\n          )}\n          {!!do_block && (\n            <span className=\"clickable\" onClick={do_block}>\n              {' '}\n              🚫{' '}\n            </span>\n          )}\n          {!!do_report && (\n            <>\n              &nbsp;\n              <span className=\"clickable\" onClick={do_report}>\n                <span className=\"icon icon-flag\" />\n              </span>\n              &nbsp;\n            </>\n          )}\n          {info.dangerous_user && (\n            <span className=\"danger-info\"> {info.dangerous_user} </span>\n          )}\n          {info.blocked_count && (\n            <span className=\"danger-info\"> {info.blocked_count} </span>\n          )}\n          <Time stamp={info.timestamp} short={!do_report} />\n          &nbsp;\n          {has_block_words && <span className=\"box-header-badge\">已屏蔽</span>}\n        </div>\n        {!has_block_words && (\n          <div className=\"box-content\">\n            <HighlightedMarkdown\n              author={author}\n              text={replyText}\n              color_picker={color_picker}\n              show_pid={show_pid}\n              search_param={search_param}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass FlowItem extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cw: props.info.cw || '',\n    };\n  }\n\n  copy_link(event) {\n    event.preventDefault();\n    copy(\n      `${event.target.href}${\n        this.props.info.cw ? ' 【' + this.props.info.cw + '】' : ''\n      }\\n\\n${this.props.info.text}\\n` +\n        `（${format_time(new Date(this.props.info.timestamp * 1000))} ${\n          this.props.info.likenum\n        }关注 ${this.props.info.reply}回复）\\n\\n` +\n        this.props.replies.map((r) => `【${r.name}】\\n${r.text}\\n`).join('\\n'),\n    );\n  }\n\n  on_cw_change(event) {\n    this.setState({\n      cw: event.target.value,\n    });\n  }\n\n  render() {\n    const {\n      info,\n      is_quote,\n      cached,\n      attention,\n      do_filter_name,\n      do_delete,\n      do_edit_cw,\n      img_clickable,\n      color_picker,\n      show_pid,\n      do_vote,\n      do_block,\n      search_param,\n    } = this.props;\n    const { cw } = this.state;\n    const _display_color = color_picker.get(DZ_NAME, info.is_tmp);\n    return (\n      <div className={'flow-item' + (is_quote ? ' flow-item-quote' : '')}>\n        {!!is_quote && (\n          <div className=\"quote-tip black-outline\">\n            <div>\n              <span className=\"icon icon-quote\" />\n            </div>\n            {/*<div>*/}\n            {/*  <small>提到</small>*/}\n            {/*</div>*/}\n          </div>\n        )}\n        <div\n          className=\"box\"\n          style={{\n            '--box-bgcolor-light': _display_color[0],\n            '--box-bgcolor-dark': _display_color[1],\n          }}\n        >\n          {!!window.LATEST_POST_ID &&\n            parseInt(info.pid, 10) > window.LATEST_POST_ID && (\n              <div className=\"flow-item-dot\" />\n            )}\n          {!!attention && !cached && <div className=\"flow-item-dot\" />}\n          <div className=\"box-header\">\n            {!!do_filter_name && (\n              <span\n                className=\"reply-header-badge clickable\"\n                onClick={() => {\n                  do_filter_name(DZ_NAME);\n                }}\n              >\n                <span className=\"icon icon-locate\" />\n              </span>\n            )}\n            {!!parseInt(info.likenum, 10) && (\n              <span className=\"box-header-badge\">\n                {info.likenum}&nbsp;\n                <span\n                  className={'icon icon-' + (attention ? 'star-ok' : 'star')}\n                />\n              </span>\n            )}\n            {!!parseInt(info.reply, 10) && (\n              <span className=\"box-header-badge\">\n                {info.reply}&nbsp;\n                <span className=\"icon icon-reply\" />\n              </span>\n            )}\n            <code className=\"box-id\">\n              <a href={'##' + info.pid} onClick={this.copy_link.bind(this)}>\n                #{info.pid}\n              </a>\n            </code>\n            &nbsp;\n            {info.author_title && (\n              <span className=\"box-header-name author-title\">{`\"${info.author_title}\"`}</span>\n            )}\n            {info.is_tmp && (\n              <span className=\"box-header-name tmp-title\">临时账号</span>\n            )}\n            {info.is_reported && <span className=\"danger-info\"> R </span>}\n            {!!do_delete && !!info.can_del && (\n              <span\n                className=\"clickable\"\n                onClick={() => {\n                  do_delete('pid', info.pid);\n                }}\n              >\n                {' '}\n                🗑️{' '}\n              </span>\n            )}\n            {!!do_block && (\n              <span className=\"clickable\" onClick={do_block}>\n                {' '}\n                🚫{' '}\n              </span>\n            )}\n            {info.dangerous_user && (\n              <span className=\"danger-info\"> {info.dangerous_user} </span>\n            )}\n            {info.blocked_count && (\n              <span className=\"danger-info\"> {info.blocked_count} </span>\n            )}\n            {info.cw !== null && (!do_edit_cw || !info.can_del) && (\n              <span className=\"box-header-cw\">{info.cw}</span>\n            )}\n            {!!do_edit_cw && !!info.can_del && (\n              <div className=\"box-header-cw-edit clickable\">\n                <input\n                  type=\"text\"\n                  value={cw}\n                  maxLength=\"32\"\n                  placeholder=\"编辑折叠警告\"\n                  onChange={this.on_cw_change.bind(this)}\n                />\n                <button type=\"button\" onClick={(e) => do_edit_cw(cw, info.pid)}>\n                  更新\n                </button>\n              </div>\n            )}\n            {info.allow_search && <span> 📢 </span>}\n            <Time stamp={info.timestamp} short={!img_clickable} />\n          </div>\n          {!!info.hot_score && (\n            <span className=\"box-header\">hot score: {info.hot_score}</span>\n          )}\n          <div className=\"box-content\">\n            <HighlightedMarkdown\n              text={info.text}\n              color_picker={color_picker}\n              show_pid={show_pid}\n              search_param={search_param}\n            />\n          </div>\n          {info.poll && (\n            <div className={!do_vote ? 'box-poll disabled' : 'box-poll'}>\n              <Poll\n                key={info.poll.vote || 'x'}\n                question={''}\n                answers={info.poll.answers}\n                onVote={do_vote || (() => {})}\n                customStyles={{ theme: 'cyan' }}\n                noStorage={true}\n                vote={localStorage['VOTE_RECORD:' + info.pid] || info.poll.vote}\n              />\n            </div>\n          )}\n          {!!(attention && info.variant.latest_reply) && (\n            <p className=\"box-footer\">\n              最新回复 <Time stamp={info.variant.latest_reply} short={false} />\n            </p>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass FlowSidebar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attention: props.attention,\n      info: props.info,\n      replies: props.replies,\n      loading_status: 'done',\n      error_msg: null,\n      filter_name: null,\n      rev: false,\n    };\n    this.color_picker = props.color_picker;\n    this.syncState = props.sync_state || (() => {});\n    this.reply_ref = React.createRef();\n  }\n\n  set_variant(cid, variant) {\n    this.setState(\n      (prev) => {\n        if (cid)\n          return {\n            replies: prev.replies.map((reply) => {\n              if (reply.cid === cid)\n                return Object.assign({}, reply, {\n                  variant: Object.assign({}, reply.variant, variant),\n                });\n              else return reply;\n            }),\n          };\n        else\n          return {\n            info: Object.assign({}, prev.info, {\n              variant: Object.assign({}, prev.info.variant, variant),\n            }),\n          };\n      },\n      function () {\n        this.syncState({\n          info: this.state.info,\n          replies: this.state.replies,\n        });\n      },\n    );\n  }\n\n  load_replies(update_count = true) {\n    this.setState({\n      loading_status: 'loading',\n      error_msg: null,\n    });\n    API.load_replies(\n      this.state.info.pid,\n      this.props.token,\n      this.color_picker,\n      null,\n    )\n      .then((json) => {\n        this.setState(\n          (prev, props) => ({\n            replies: json.data,\n            info: update_count\n              ? Object.assign({}, prev.info, {\n                  reply: '' + json.data.length,\n                  likenum: '' + json.likenum,\n                })\n              : prev.info,\n            attention: !!json.attention,\n            loading_status: 'done',\n            error_msg: null,\n          }),\n          () => {\n            this.syncState({\n              replies: this.state.replies,\n              attention: this.state.attention,\n              info: this.state.info,\n            });\n            if (this.state.replies.length)\n              this.set_variant(null, {\n                latest_reply: Math.max.apply(\n                  null,\n                  this.state.replies.map((r) => parseInt(r.timestamp)),\n                ),\n              });\n          },\n        );\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({\n          replies: [],\n          loading_status: 'done',\n          error_msg: '' + e,\n        });\n      });\n  }\n\n  toggle_attention() {\n    const prev_info = this.state.info;\n    const pid = prev_info.pid;\n    API.set_attention(pid, !this.state.attention, this.props.token)\n      .then((json) => {\n        this.setState({\n          attention: json.attention,\n          info: Object.assign({}, prev_info, {\n            likenum: '' + json.likenum,\n          }),\n        });\n\n        let saved_attentions = window.saved_attentions;\n        if (json.attention && !saved_attentions.includes(pid)) {\n          saved_attentions.unshift(pid);\n        } else if (!json.attention && saved_attentions.includes(pid)) {\n          const idx = saved_attentions.indexOf(pid);\n          saved_attentions.splice(idx, 1);\n        }\n        window.saved_attentions = saved_attentions;\n        save_attentions();\n\n        this.syncState({\n          attention: json.attention,\n          info: Object.assign({}, prev_info, {\n            likenum: '' + json.likenum,\n          }),\n        });\n      })\n      .catch((e) => {\n        this.setState({\n          loading_status: 'done',\n        });\n        alert('设置关注失败\\n' + e);\n        console.error(e);\n      });\n  }\n\n  do_vote(vote) {\n    this.setState({\n      loading_status: 'loading',\n      error_msg: null,\n    });\n    API.add_vote(vote, this.state.info.pid, this.props.token)\n      .then((json) => {\n        if (json.code !== 0) return;\n        localStorage['VOTE_RECORD:' + this.state.info.pid] = vote;\n        this.setState(\n          (prev, props) => ({\n            info: Object.assign({}, prev.info, { poll: json.data }),\n            loading_status: 'done',\n          }),\n          () => {\n            this.syncState({\n              info: this.state.info,\n            });\n          },\n        );\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({\n          loading_status: 'done',\n          error_msg: '' + e,\n        });\n      });\n  }\n\n  report(event, text = '') {\n    console.log(text);\n    let reason = prompt(`举报 #${this.state.info.pid} 的理由：`, text);\n    if (reason !== null) {\n      API.report(this.state.info.pid, reason, this.props.token)\n        .then((json) => {\n          alert('举报成功');\n        })\n        .catch((e) => {\n          alert('举报失败\\n' + e);\n          console.error(e);\n        });\n    }\n  }\n\n  block(name, type, id, on_complete) {\n    if (confirm(`确定拉黑${name}吗？后续将不会收到其发布的任何内容`)) {\n      API.block(type, id, this.props.token)\n        .then((json) => {\n          let data = json.data;\n          alert(`操作成功，当前拉黑数 ${data.curr}`);\n          !!on_complete && on_complete();\n        })\n        .catch((e) => {\n          alert('拉黑失败\\n' + e);\n          console.error(e);\n        });\n    }\n  }\n\n  set_filter_name(name) {\n    this.setState((prevState) => ({\n      filter_name: name === prevState.filter_name ? null : name,\n    }));\n  }\n\n  toggle_rev() {\n    this.setState((prevState) => ({ rev: !prevState.rev }), forceCheck);\n  }\n\n  show_reply_bar(name, event) {\n    if (this.reply_ref.current && !event.target.closest('a, .clickable')) {\n      let text = this.reply_ref.current.get();\n      if (\n        /^\\s*(?:Re (?:|洞主|(?:[A-Z][a-z]+ )?(?:[A-Z][a-z]+)|You Win(?: \\d+)?):)?\\s*$/.test(\n          text,\n        )\n      ) {\n        // text is nearly empty so we can replace it\n        let should_text = 'Re ' + name + ': ';\n        if (should_text === this.reply_ref.current.get())\n          this.reply_ref.current.set('');\n        else this.reply_ref.current.set(should_text);\n      }\n    }\n  }\n\n  make_do_delete(token, on_complete = null) {\n    const do_delete = (type, id) => {\n      let note = prompt(`将删除${type}=${id}, 备注：`, '(无)');\n      if (note !== null) {\n        API.del(type, id, note, token)\n          .then((json) => {\n            alert('删除成功');\n            on_complete();\n          })\n          .catch((e) => {\n            alert('删除失败\\n' + e);\n            console.error(e);\n          });\n      }\n    };\n    return do_delete;\n  }\n\n  do_edit_cw(cw, id) {\n    API.update_cw(cw, id, this.props.token)\n      .then((json) => {\n        this.setState(\n          {\n            info: Object.assign({}, this.state.info, { cw: cw }),\n          },\n          () => {\n            this.syncState({\n              info: this.state.info,\n            });\n          },\n        );\n        alert('已更新');\n      })\n      .catch((e) => {\n        alert('更新失败\\n' + e);\n        console.error(e);\n      });\n  }\n\n  render() {\n    if (this.state.loading_status === 'loading')\n      return <p className=\"box box-tip\">加载中……</p>;\n\n    let show_pid = load_single_meta(this.props.show_sidebar, this.props.token);\n\n    let replies_to_show = this.state.filter_name\n      ? this.state.replies.filter((r) => r.name === this.state.filter_name)\n      : this.state.replies.slice();\n    if (this.state.rev) replies_to_show.reverse();\n\n    // may not need key, for performance\n    // key for lazyload elem\n    // let view_mode_key =\n    //   (this.state.rev ? 'y-' : 'n-') + (this.state.filter_name || 'null');\n\n    let replies_cnt = { [DZ_NAME]: 1 };\n    replies_to_show.forEach((r) => {\n      if (replies_cnt[r.name] === undefined) replies_cnt[r.name] = 0;\n      replies_cnt[r.name]++;\n    });\n\n    // hide main thread when filtered\n    let main_thread_elem =\n      this.state.filter_name && this.state.filter_name !== DZ_NAME ? null : (\n        <ClickHandler\n          callback={(e) => {\n            this.show_reply_bar('', e);\n          }}\n        >\n          <FlowItem\n            info={this.state.info}\n            attention={this.state.attention}\n            img_clickable={true}\n            color_picker={this.color_picker}\n            show_pid={show_pid}\n            search_param={this.props.search_param}\n            replies={this.state.replies}\n            set_variant={(variant) => {\n              this.set_variant(null, variant);\n            }}\n            do_filter_name={\n              replies_cnt[DZ_NAME] > 1 ? this.set_filter_name.bind(this) : null\n            }\n            do_delete={this.make_do_delete(this.props.token, () => {\n              window.location.reload();\n            })}\n            do_edit_cw={this.do_edit_cw.bind(this)}\n            do_vote={this.do_vote.bind(this)}\n            do_block={() => {\n              this.block('洞主', 'post', this.state.info.pid, () => {\n                window.location.reload();\n              });\n            }}\n          />\n        </ClickHandler>\n      );\n\n    return (\n      <div className=\"flow-item-row sidebar-flow-item\">\n        <div className=\"box box-tip\">\n          {!!this.props.token && (\n            <span>\n              <a onClick={this.report.bind(this)}>\n                <span className=\"icon icon-flag\" />\n                <label>举报</label>\n              </a>\n              &nbsp;&nbsp;\n            </span>\n          )}\n          <a onClick={this.load_replies.bind(this)}>\n            <span className=\"icon icon-refresh\" />\n            <label>刷新</label>\n          </a>\n          {(this.state.replies.length >= 1 || this.state.rev) && (\n            <span>\n              &nbsp;&nbsp;\n              <a onClick={this.toggle_rev.bind(this)}>\n                <span className=\"icon icon-order-rev\" />\n                <label>{this.state.rev ? '还原' : '逆序'}</label>\n              </a>\n            </span>\n          )}\n          {!!this.props.token && (\n            <span>\n              &nbsp;&nbsp;\n              <a\n                onClick={() => {\n                  this.toggle_attention();\n                }}\n              >\n                {this.state.attention ? (\n                  <span>\n                    <span className=\"icon icon-star-ok\" />\n                    <label>已关注</label>\n                  </span>\n                ) : (\n                  <span>\n                    <span className=\"icon icon-star\" />\n                    <label>未关注</label>\n                  </span>\n                )}\n              </a>\n            </span>\n          )}\n        </div>\n        {!!this.state.filter_name && (\n          <div className=\"box box-tip flow-item filter-name-bar\">\n            <p>\n              <span style={{ float: 'left' }}>\n                <a\n                  onClick={() => {\n                    this.set_filter_name(null);\n                  }}\n                >\n                  还原\n                </a>\n              </span>\n              <span className=\"icon icon-locate\" />\n              &nbsp;当前只看&nbsp;\n              <ColoredSpan\n                colors={this.color_picker.get(this.state.filter_name)}\n              >\n                {this.state.filter_name}\n              </ColoredSpan>\n            </p>\n          </div>\n        )}\n        {!this.state.rev && main_thread_elem}\n        {!!this.state.error_msg && (\n          <div className=\"box box-tip flow-item\">\n            <p>加载失败</p>\n            <p>{this.state.error_msg}</p>\n          </div>\n        )}\n        {this.props.deletion_detect &&\n          parseInt(this.state.info.reply) > this.state.replies.length &&\n          !!this.state.replies.length && (\n            <div className=\"box box-tip flow-item box-danger\">\n              {parseInt(this.state.info.reply) - this.state.replies.length}{' '}\n              条回复被删除\n            </div>\n          )}\n        {replies_to_show.map(\n          (reply, i) =>\n            (reply.can_del || !reply.is_blocked) && (\n              <LazyLoad\n                key={i}\n                offset={1500}\n                height=\"5em\"\n                overflow={true}\n                once={true}\n              >\n                <ClickHandler\n                  callback={(e) => {\n                    this.show_reply_bar(reply.name, e);\n                  }}\n                >\n                  <Reply\n                    info={reply}\n                    color_picker={this.color_picker}\n                    show_pid={show_pid}\n                    search_param={this.props.search_param}\n                    set_variant={(variant) => {\n                      this.set_variant(reply.cid, variant);\n                    }}\n                    do_filter_name={\n                      replies_cnt[reply.name] > 1\n                        ? this.set_filter_name.bind(this)\n                        : null\n                    }\n                    do_delete={this.make_do_delete(\n                      this.props.token,\n                      this.load_replies.bind(this),\n                    )}\n                    do_block={() => {\n                      this.block(\n                        reply.name,\n                        'comment',\n                        reply.cid,\n                        this.load_replies.bind(this),\n                      );\n                    }}\n                    do_report={(e) => {\n                      this.report(\n                        e,\n                        `评论区${reply.name}，评论id ${reply.cid}`,\n                      );\n                    }}\n                  />\n                </ClickHandler>\n              </LazyLoad>\n            ),\n        )}\n        {this.state.rev && main_thread_elem}\n        {this.props.token ? (\n          <ReplyForm\n            pid={this.state.info.pid}\n            token={this.props.token}\n            area_ref={this.reply_ref}\n            on_complete={this.load_replies.bind(this)}\n          />\n        ) : (\n          <div className=\"box box-tip flow-item\">登录后可以回复树洞</div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass FlowItemRow extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.needFold =\n      props.info.cw &&\n      window.config.whitelist_cw.indexOf('*') == -1 &&\n      window.config.whitelist_cw.indexOf(props.info.cw) == -1 &&\n      props.mode === 'list';\n    this.has_block_words = check_block(props.info);\n    this.color_picker = new ColorPicker();\n    this.state = {\n      replies: props.info.comments\n        ? parse_replies(props.info.comments, this.color_picker)\n        : [],\n      reply_status: 'done',\n      reply_error: null,\n      info: Object.assign({}, props.info, { variant: {} }),\n      attention: props.info.attention,\n      cached: true, // default no display anything\n    };\n  }\n\n  componentDidMount() {\n    // cache from getlist, so always to this to update attention\n    if (!this.props.info.comments) {\n      //if (true || parseInt(this.state.info.reply, 10)) {\n      this.load_replies(null, /*update_count=*/ false);\n    }\n  }\n\n  // reveal() {\n  //   this.setState({ hidden: false });\n  // }\n\n  load_replies(callback, update_count = true) {\n    //console.log('fetching reply', this.state.info.pid);\n    this.setState({\n      reply_status: 'loading',\n      reply_error: null,\n    });\n    API.load_replies_with_cache(\n      this.state.info.pid,\n      this.props.token,\n      this.color_picker,\n      parseInt(this.state.info.reply),\n    )\n      .then(({ data: json, cached }) => {\n        //console.log('>> update', json, json.attention);\n        this.setState(\n          (prev, props) => ({\n            replies: json.data,\n            info: Object.assign({}, prev.info, {\n              reply: update_count ? '' + json.data.length : prev.info.reply,\n              variant: json.data.length\n                ? {\n                    latest_reply: Math.max.apply(\n                      null,\n                      json.data.map((r) => parseInt(r.timestamp)),\n                    ),\n                  }\n                : {},\n            }),\n            attention: !!json.attention,\n            reply_status: 'done',\n            reply_error: null,\n            cached,\n          }),\n          callback,\n        );\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState(\n          {\n            replies: [],\n            reply_status: 'failed',\n            reply_error: '' + e,\n          },\n          callback,\n        );\n      });\n  }\n\n  show_sidebar() {\n    this.props.show_sidebar(\n      '树洞 #' + this.state.info.pid,\n      <FlowSidebar\n        key={+new Date()}\n        info={this.state.info}\n        search_param={this.props.search_param}\n        replies={this.state.replies}\n        attention={this.state.attention}\n        sync_state={this.setState.bind(this)}\n        token={this.props.token}\n        show_sidebar={this.props.show_sidebar}\n        color_picker={this.color_picker}\n        deletion_detect={this.props.deletion_detect}\n      />,\n    );\n  }\n\n  render() {\n    const { show_sidebar, token, search_param, is_quote, mode } = this.props;\n    let show_pid = load_single_meta(show_sidebar, token, [this.state.info.pid]);\n\n    let hl_rules = [['pid', PID_RE]];\n    let parts = split_text(this.state.info.text, hl_rules);\n\n    //console.log('hl:', parts,this.state.info.pid);\n\n    let quote_id = null;\n    if (!is_quote)\n      for (let [mode, content] of parts) {\n        content = content.length > 0 ? content.substring(1) : content;\n        if (\n          mode === 'pid' &&\n          QUOTE_BLACKLIST.indexOf(content) === -1 &&\n          parseInt(content) < parseInt(this.state.info.pid)\n        ) {\n          if (quote_id === null) quote_id = parseInt(content);\n          else {\n            quote_id = null;\n            break;\n          }\n        }\n      }\n\n    let res = (\n      <div\n        className={\n          'flow-item-row flow-item-row-with-prompt' +\n          (is_quote ? ' flow-item-row-quote' : '')\n        }\n        onClick={(event) => {\n          if (!CLICKABLE_TAGS[event.target.tagName.toLowerCase()])\n            this.show_sidebar();\n        }}\n      >\n        <FlowItem\n          info={this.state.info}\n          attention={this.state.attention}\n          img_clickable={false}\n          is_quote={this.props.is_quote}\n          color_picker={this.color_picker}\n          show_pid={show_pid}\n          replies={this.state.replies}\n          cached={this.state.cached}\n          search_param={search_param}\n        />\n        <div className=\"flow-reply-row\">\n          {this.state.reply_status === 'loading' && (\n            <div className=\"box box-tip\">加载中</div>\n          )}\n          {this.state.reply_status === 'failed' && (\n            <div className=\"box box-tip\">\n              <p>\n                <a\n                  onClick={() => {\n                    this.load_replies();\n                  }}\n                >\n                  重新加载评论\n                </a>\n              </p>\n              <p>{this.state.reply_error}</p>\n            </div>\n          )}\n          {this.state.replies\n            .slice(0, PREVIEW_REPLY_COUNT)\n            .map(\n              (reply) =>\n                (reply.can_del || !reply.is_blocked) && (\n                  <Reply\n                    key={reply.cid}\n                    info={reply}\n                    color_picker={this.color_picker}\n                    show_pid={show_pid}\n                    search_param={search_param}\n                  />\n                ),\n            )}\n          {this.state.replies.length > PREVIEW_REPLY_COUNT && (\n            <div className=\"box box-tip\">\n              还有 {this.state.replies.length - PREVIEW_REPLY_COUNT} 条\n            </div>\n          )}\n        </div>\n      </div>\n    );\n\n    if (this.needFold || this.has_block_words) {\n      return (\n        (!this.has_block_words || mode !== 'list') && (\n          <div\n            className=\"flow-item-row flow-item-row-with-prompt\"\n            onClick={(event) => {\n              if (!CLICKABLE_TAGS[event.target.tagName.toLowerCase()])\n                this.show_sidebar();\n            }}\n          >\n            <div\n              className={\n                'flow-item' + (this.props.is_quote ? ' flow-item-quote' : '')\n              }\n            >\n              {!!this.props.is_quote && (\n                <div className=\"quote-tip black-outline\">\n                  <div>\n                    <span className=\"icon icon-quote\" />\n                  </div>\n                  {/*<div>*/}\n                  {/*  <small>提到</small>*/}\n                  {/*</div>*/}\n                </div>\n              )}\n              <div className=\"box\">\n                <div className=\"box-header\">\n                  {!!this.props.do_filter_name && (\n                    <span\n                      className=\"reply-header-badge clickable\"\n                      onClick={() => {\n                        this.props.do_filter_name(DZ_NAME);\n                      }}\n                    >\n                      <span className=\"icon icon-locate\" />\n                    </span>\n                  )}\n                  <code className=\"box-id\">#{this.props.info.pid}</code>\n                  &nbsp;\n                  {this.props.info.author_title && (\n                    <span className=\"box-header-name author-title\">{`\"${this.props.info.author_title}\"`}</span>\n                  )}\n                  {this.props.info.is_tmp && (\n                    <span className=\"box-header-name tmp-title\">临时账号</span>\n                  )}\n                  {this.props.info.cw !== null && (\n                    <span className=\"box-header-cw\">{this.props.info.cw}</span>\n                  )}\n                  <Time stamp={this.props.info.timestamp} short={true} />\n                  <span className=\"box-header-badge\">\n                    {this.needFold ? '已折叠' : '已屏蔽'}\n                  </span>\n                  <div style={{ clear: 'both' }} />\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      );\n    }\n\n    return quote_id ? (\n      <div>\n        {res}\n        <FlowItemQuote\n          pid={quote_id}\n          show_sidebar={this.props.show_sidebar}\n          token={this.props.token}\n          deletion_detect={this.props.deletion_detect}\n        />\n      </div>\n    ) : (\n      res\n    );\n  }\n}\n\nclass FlowItemQuote extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading_status: 'empty',\n      error_msg: null,\n      info: null,\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  load() {\n    this.setState(\n      {\n        loading_status: 'loading',\n      },\n      () => {\n        API.get_single(this.props.pid, this.props.token)\n          .then((json) => {\n            this.setState({\n              loading_status: 'done',\n              info: json.data,\n            });\n          })\n          .catch((err) => {\n            if (('' + err).indexOf('没有这条树洞') !== -1)\n              this.setState({\n                loading_status: 'empty',\n              });\n            else\n              this.setState({\n                loading_status: 'error',\n                error_msg: '' + err,\n              });\n          });\n      },\n    );\n  }\n\n  render() {\n    if (this.state.loading_status === 'empty') return null;\n    else if (this.state.loading_status === 'loading')\n      return (\n        <div className=\"aux-margin\">\n          <div className=\"box box-tip\">\n            <span className=\"icon icon-loading\" />\n            提到了 #{this.props.pid}\n          </div>\n        </div>\n      );\n    else if (this.state.loading_status === 'error')\n      return (\n        <div className=\"aux-margin\">\n          <div className=\"box box-tip\">\n            <p>\n              <a onClick={this.load.bind(this)}>重新加载</a>\n            </p>\n            <p>{this.state.error_msg}</p>\n          </div>\n        </div>\n      );\n    // 'done'\n    else\n      return (\n        <FlowItemRow\n          info={this.state.info}\n          mode={this.props.mode}\n          show_sidebar={this.props.show_sidebar}\n          token={this.props.token}\n          is_quote={true}\n          deletion_detect={this.props.deletion_detect}\n        />\n      );\n  }\n}\n\nfunction FlowChunk(props) {\n  return (\n    <TokenCtx.Consumer>\n      {({ value: token }) => (\n        <div className=\"flow-chunk\">\n          {!!props.title && <TitleLine text={props.title} />}\n          {props.list.map(\n            (info, ind) =>\n              (info.can_del || !info.is_blocked) && (\n                <LazyLoad\n                  key={info.key || info.pid}\n                  offset={500}\n                  height=\"15em\"\n                  hiddenIfInvisible={false}\n                >\n                  <div>\n                    {!!(\n                      props.deletion_detect &&\n                      props.mode === 'list' &&\n                      ind &&\n                      props.list[ind - 1].pid - info.pid > 1\n                    ) && (\n                      <div className=\"flow-item-row\">\n                        <div className=\"box box-tip flow-item box-danger\">\n                          {props.list[ind - 1].pid - info.pid - 1} 条被删除\n                        </div>\n                      </div>\n                    )}\n                    <FlowItemRow\n                      info={info}\n                      mode={props.mode}\n                      show_sidebar={props.show_sidebar}\n                      token={token}\n                      deletion_detect={props.deletion_detect}\n                      search_param={props.search_param}\n                    />\n                  </div>\n                </LazyLoad>\n              ),\n          )}\n        </div>\n      )}\n    </TokenCtx.Consumer>\n  );\n}\n\nexport class Flow extends PureComponent {\n  constructor(props) {\n    super(props);\n    let submode = window[props.mode.toUpperCase() + '_SUBMODE_BACKUP'];\n    if (submode === undefined) {\n      submode = props.mode === 'list' ? (window.config.by_c ? 1 : 0) : 0;\n    }\n    this.state = {\n      submode: submode,\n    };\n  }\n\n  get_submode_names(mode) {\n    switch (mode) {\n      case 'list':\n        return ['最新', '最近回复', '近期热门', '随机'];\n      case 'attention':\n        return ['线上关注', '本地收藏'];\n      case 'search':\n        return ['Tag搜索', '全文搜索', '头衔'];\n    }\n    return [];\n  }\n\n  set_submode(submode) {\n    window[this.props.mode.toUpperCase() + '_SUBMODE_BACKUP'] = submode;\n    this.setState({\n      submode: submode,\n    });\n  }\n\n  render() {\n    const { submode } = this.state;\n    const submode_names = this.get_submode_names(this.props.mode);\n    return (\n      <>\n        <div className=\"aux-margin flow-submode-choice\">\n          {submode_names.map((name, idx) => (\n            <a\n              key={idx}\n              className={submode === idx ? 'choiced' : ''}\n              onClick={this.set_submode.bind(this, idx)}\n            >\n              {name}\n            </a>\n          ))}\n        </div>\n\n        <SubFlow\n          key={submode}\n          show_sidebar={this.props.show_sidebar}\n          mode={this.props.mode}\n          submode={submode}\n          search_text={this.props.search_text}\n          token={this.props.token}\n        />\n      </>\n    );\n  }\n}\n\nclass SubFlow extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: props.mode,\n      search_param: props.search_text,\n      loaded_pages: 0,\n      chunks: {\n        title: '',\n        data: [],\n      },\n      export_text: '',\n      loading_status: 'done',\n      error_msg: null,\n    };\n    this.on_scroll_bound = this.on_scroll.bind(this);\n    window.LATEST_POST_ID = parseInt(localStorage['_LATEST_POST_ID'], 10) || 0;\n  }\n\n  load_page(page) {\n    const failed = (err) => {\n      console.error(err);\n      this.setState((prev, props) => ({\n        loaded_pages: prev.loaded_pages - 1,\n        loading_status: 'failed',\n        error_msg: '' + err,\n      }));\n    };\n\n    if (page > this.state.loaded_pages + 1) throw new Error('bad page');\n    if (page === this.state.loaded_pages + 1) {\n      const { mode, search_param } = this.state;\n      const { token, submode } = this.props;\n      console.log('fetching page', page);\n      cache();\n      if (mode === 'list') {\n        API.get_list(page, token, submode)\n          .then((json) => {\n            if (page === 1 && json.data.length) {\n              // update latest_post_id\n              let max_id = window.LATEST_POST_ID || -1;\n              json.data.forEach((x) => {\n                if (parseInt(x.pid, 10) > max_id) max_id = parseInt(x.pid, 10);\n              });\n              localStorage['_LATEST_POST_ID'] = '' + max_id;\n            }\n            window.TITLE = json.custom_title;\n            window.AUTO_BLCOK = json.auto_block_rank;\n            json.data.forEach((x) => {\n              if (x.comments) {\n                let comment_json = {\n                  code: 0,\n                  attention: x.attention,\n                  data: x.comments,\n                };\n                //console.log('My cache', comment_json, x.pid, x.reply)\n                cache().put(x.pid, parseInt(x.reply, 10), comment_json);\n              }\n            });\n            this.setState((prev, props) => ({\n              chunks: {\n                title: 'News Feed',\n                data: prev.chunks.data.concat(\n                  json.data.filter(\n                    (x) =>\n                      prev.chunks.data.length === 0 ||\n                      !prev.chunks.data\n                        .slice(-100)\n                        .some((p) => p.pid === x.pid),\n                  ),\n                ),\n              },\n              loading_status: 'done',\n            }));\n          })\n          .catch(failed);\n      } else if (mode === 'search' && search_param) {\n        API.get_search(page, search_param, token, submode)\n          .then((json) => {\n            const finished = json.data.length === 0;\n            this.setState((prev, props) => ({\n              chunks: {\n                title: 'Result for \"' + search_param + '\"',\n                data: prev.chunks.data.concat(json.data),\n              },\n              mode: finished ? 'search_finished' : 'search',\n              loading_status: 'done',\n            }));\n          })\n          .catch(failed);\n      } else if (mode === 'single') {\n        const pid = parseInt(this.state.search_param.substr(1), 10);\n        API.get_single(pid, this.props.token)\n          .then((json) => {\n            let x = json.data;\n            if (x.comments) {\n              let comment_json = {\n                code: 0,\n                attention: x.attention,\n                data: x.comments,\n              };\n              //console.log('My cache', comment_json, x.pid, x.reply)\n              cache().put(x.pid, parseInt(x.reply, 10), comment_json);\n            }\n\n            this.setState({\n              chunks: {\n                title: 'PID = ' + pid,\n                data: [json.data],\n              },\n              mode: 'single_finished',\n              loading_status: 'done',\n            });\n          })\n          .catch(failed);\n      } else if (mode === 'attention') {\n        let use_search = !!this.state.search_param;\n        let use_regex = use_search && !!this.state.search_param.match(/\\/.+\\//);\n        let regex_search = /.+/;\n        if (use_regex) {\n          try {\n            regex_search = new RegExp(this.state.search_param.slice(1, -1));\n          } catch (e) {\n            alert(`请检查正则表达式合法性！\\n${e}`);\n            regex_search = /.+/;\n          }\n        }\n        console.log(use_search, use_regex);\n\n        if (this.props.submode === 0) {\n          API.get_attention(this.props.token)\n            .then((json) => {\n              this.setState({\n                chunks: {\n                  title: `${\n                    use_search\n                      ? use_regex\n                        ? `Result for RegEx ${regex_search.toString()} in `\n                        : `Result for \"${this.state.search_param}\" in `\n                      : ''\n                  }Attention List`,\n                  data: !use_search\n                    ? json.data\n                    : !use_regex\n                    ? json.data.filter((post) => {\n                        return this.state.search_param\n                          .split(' ')\n                          .every((keyword) => post.text.includes(keyword));\n                      }) // Not using regex\n                    : json.data.filter(\n                        (post) => !!post.text.match(regex_search),\n                      ), // Using regex\n                },\n                mode: 'attention_finished',\n                loading_status: 'done',\n              });\n              if (!use_search) {\n                window.saved_attentions = Array.from(\n                  new Set([\n                    ...window.saved_attentions,\n                    ...json.data.map((post) => post.pid),\n                  ]),\n                ).sort((a, b) => b - a);\n                save_attentions();\n              }\n            })\n            .catch(failed);\n        } else if (this.props.submode === 1) {\n          const PERPAGE = 50;\n          let pids = window.saved_attentions\n            .sort((a, b) => b - a)\n            .slice((page - 1) * PERPAGE, page * PERPAGE);\n          if (pids.length) {\n            API.get_multi(pids, this.props.token)\n              .then((json) => {\n                json.data.forEach((x) => {\n                  if (x.comments) {\n                    let comment_json = {\n                      code: 0,\n                      attention: x.attention,\n                      data: x.comments,\n                    };\n                    //console.log('My cache', comment_json, x.pid, x.reply)\n                    cache().put(x.pid, parseInt(x.reply, 10), comment_json);\n                  }\n                });\n                this.setState((prev, props) => ({\n                  chunks: {\n                    title: 'Attention List: Local',\n                    data: prev.chunks.data.concat(json.data),\n                  },\n                  loading_status: 'done',\n                }));\n              })\n              .catch(failed);\n          } else {\n            console.log('local attention finished');\n            this.setState({\n              loading_status: 'done',\n              mode: 'attention_finished',\n            });\n            return;\n          }\n        }\n      } else {\n        console.log('nothing to load');\n        return;\n      }\n\n      this.setState((prev, props) => ({\n        loaded_pages: prev.loaded_pages + 1,\n        loading_status: 'loading',\n        error_msg: null,\n      }));\n    }\n  }\n\n  on_scroll(event) {\n    if (event.target === document) {\n      const avail =\n        document.body.scrollHeight - window.scrollY - window.innerHeight;\n      if (avail < window.innerHeight && this.state.loading_status === 'done')\n        this.load_page(this.state.loaded_pages + 1);\n    }\n  }\n\n  componentDidMount() {\n    this.load_page(1);\n    window.addEventListener('scroll', this.on_scroll_bound);\n    window.addEventListener('resize', this.on_scroll_bound);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.on_scroll_bound);\n    window.removeEventListener('resize', this.on_scroll_bound);\n  }\n\n  trunc_string(s, max_len) {\n    return s.substr(0, max_len) + (s.length > max_len ? '...' : '');\n  }\n\n  gen_export() {\n    this.setState({\n      can_export: false,\n      export_text:\n        '以下是你关注的洞及摘要，复制保存到本地吧。\\n\\n' +\n        this.state.chunks.data\n          .map(\n            (p) =>\n              `#${p.pid}: ${this.trunc_string(\n                p.text.replaceAll('\\n', ' '),\n                50,\n              )}`,\n          )\n          .join('\\n\\n'),\n    });\n  }\n\n  render() {\n    const should_deletion_detect = localStorage['DELETION_DETECT'] === 'on';\n    return (\n      <div className=\"flow-container\">\n        {this.state.mode === 'attention_finished' && this.props.submode == 0 && (\n          <button\n            className=\"export-btn\"\n            type=\"button\"\n            onClick={this.gen_export.bind(this)}\n          >\n            导出\n          </button>\n        )}\n\n        {this.state.export_text && (\n          <div className=\"box\">\n            <textarea\n              className=\"export-textarea\"\n              value={this.state.export_text}\n              readOnly\n            />\n          </div>\n        )}\n\n        <FlowChunk\n          title={this.state.chunks.title}\n          list={this.state.chunks.data}\n          mode={this.state.mode}\n          search_param={this.state.search_param || null}\n          show_sidebar={this.props.show_sidebar}\n          deletion_detect={should_deletion_detect}\n        />\n        {this.state.loading_status === 'failed' && (\n          <div className=\"aux-margin\">\n            <div className=\"box box-tip\">\n              <p>\n                <a\n                  onClick={() => {\n                    this.load_page(this.state.loaded_pages + 1);\n                  }}\n                >\n                  重新加载\n                </a>\n              </p>\n              <p>{this.state.error_msg}</p>\n            </div>\n          </div>\n        )}\n        <TitleLine\n          text={\n            this.state.loading_status === 'loading' ? (\n              <span>\n                <span className=\"icon icon-loading\" />\n                &nbsp;Loading...\n              </span>\n            ) : (\n              '🄯 2020 copyleft: hole_thu'\n            )\n          }\n        />\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n// import {AppSwitcher} from './infrastructure/widgets';\nimport { InfoSidebar, PostForm } from './UserAction';\nimport { TokenCtx } from './UserAction';\n\nimport './Title.css';\n\nconst flag_re = /^\\/\\/setflag ([a-zA-Z0-9_]+)=(.*)$/;\n\nclass ControlBar extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search_text: '',\n    };\n    this.set_mode = props.set_mode;\n\n    this.on_change_bound = this.on_change.bind(this);\n    this.on_keypress_bound = this.on_keypress.bind(this);\n    this.do_refresh_bound = this.do_refresh.bind(this);\n    this.do_attention_bound = this.do_attention.bind(this);\n  }\n\n  componentDidMount() {\n    if (window.location.hash) {\n      let text = decodeURIComponent(window.location.hash).substr(1);\n      if (text.lastIndexOf('?') !== -1)\n        text = text.substr(0, text.lastIndexOf('?')); // fuck wechat '#param?nsukey=...'\n      this.setState(\n        {\n          search_text: text,\n        },\n        () => {\n          this.on_keypress({ key: 'Enter' });\n        },\n      );\n    }\n\n    window.addEventListener(\n      'hashchange',\n      () => {\n        let text = decodeURIComponent(window.location.hash).substr(1);\n        if (text && text[0] != '#') {\n          console.log('search', text);\n          this.setState(\n            {\n              search_text: text,\n            },\n            () => {\n              this.on_keypress({ key: 'Enter' });\n            },\n          );\n        }\n      },\n      false,\n    );\n  }\n\n  on_change(event) {\n    this.setState({\n      search_text: event.target.value,\n    });\n  }\n\n  on_keypress(event) {\n    if (event.key === 'Enter') {\n      let flag_res = flag_re.exec(this.state.search_text);\n      if (flag_res) {\n        if (flag_res[2]) {\n          localStorage[flag_res[1]] = flag_res[2];\n          alert(\n            'Set Flag ' +\n              flag_res[1] +\n              '=' +\n              flag_res[2] +\n              '\\nYou may need to refresh this webpage.',\n          );\n        } else {\n          delete localStorage[flag_res[1]];\n          alert(\n            'Clear Flag ' +\n              flag_res[1] +\n              '\\nYou may need to refresh this webpage.',\n          );\n        }\n        return;\n      }\n\n      const mode = this.state.search_text.startsWith('#')\n        ? 'single'\n        : this.props.mode !== 'attention'\n        ? 'search'\n        : 'attention';\n      this.set_mode(mode, this.state.search_text || '');\n    }\n  }\n\n  do_refresh() {\n    window.scrollTo(0, 0);\n    this.setState({\n      search_text: '',\n    });\n    this.set_mode('list', null);\n    window.location.hash = '';\n  }\n\n  do_attention() {\n    window.scrollTo(0, 0);\n    this.setState({\n      search_text: '',\n    });\n    this.set_mode('attention', null);\n  }\n\n  render() {\n    return (\n      <TokenCtx.Consumer>\n        {({ value: token }) => (\n          <div className=\"control-bar\">\n            <a\n              className=\"no-underline control-btn\"\n              onClick={this.do_refresh_bound}\n            >\n              <span className=\"icon icon-refresh\" />\n              <span className=\"control-btn-label\">刷新</span>\n            </a>\n            {!!token && (\n              <a\n                className=\"no-underline control-btn\"\n                onClick={this.do_attention_bound}\n              >\n                <span className=\"icon icon-attention\" />\n                <span className=\"control-btn-label\">关注</span>\n              </a>\n            )}\n            <input\n              className=\"control-search\"\n              value={this.state.search_text}\n              placeholder={\n                this.props.mode === 'attention'\n                  ? '在关注列表中搜索'\n                  : '关键词 / tag / #树洞号'\n              }\n              onChange={this.on_change_bound}\n              onKeyPress={this.on_keypress_bound}\n            />\n            <a\n              className=\"no-underline control-btn\"\n              onClick={() => {\n                this.props.show_sidebar(\n                  '新T树洞',\n                  <InfoSidebar show_sidebar={this.props.show_sidebar} />,\n                );\n              }}\n            >\n              <span className={'icon icon-' + (token ? 'about' : 'login')} />\n              <span className=\"control-btn-label\">\n                {token ? '账户' : '登录'}\n              </span>\n            </a>\n            {!!token && (\n              <a\n                className=\"no-underline control-btn\"\n                onClick={() => {\n                  this.props.show_sidebar(\n                    '发表树洞',\n                    <PostForm\n                      token={token}\n                      on_complete={() => {\n                        this.props.show_sidebar(null, null, 'clear');\n                        this.do_refresh();\n                      }}\n                    />,\n                  );\n                }}\n              >\n                <span className=\"icon icon-plus\" />\n                <span className=\"control-btn-label\">发表</span>\n              </a>\n            )}\n          </div>\n        )}\n      </TokenCtx.Consumer>\n    );\n  }\n}\n\nexport function Title(props) {\n  return (\n    <div className=\"title-bar\">\n      {/* <AppSwitcher appid=\"hole\" /> */}\n      <div className=\"aux-margin\">\n        <div className=\"title\">\n          <p className=\"centered-line\">\n            <span\n              onClick={() =>\n                props.show_sidebar(\n                  '新T树洞',\n                  <InfoSidebar show_sidebar={props.show_sidebar} />,\n                )\n              }\n            >\n              新T树洞\n            </span>\n          </p>\n        </div>\n        <ControlBar\n          show_sidebar={props.show_sidebar}\n          set_mode={props.set_mode}\n          mode={props.mode}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport './Sidebar.css';\n\nexport class Sidebar extends PureComponent {\n  constructor(props) {\n    super(props);\n    // this.sidebar_ref = React.createRef();\n    this.do_close_bound = this.do_close.bind(this);\n    this.do_back_bound = this.do_back.bind(this);\n  }\n\n  do_close() {\n    this.props.show_sidebar(null, null, 'clear');\n  }\n  do_back() {\n    this.props.show_sidebar(null, null, 'pop');\n  }\n\n  render() {\n    // hide old contents to remember state\n    let contents = this.props.stack.map(\n      ({ 1: content }, i) =>\n        content && (\n          <div\n            key={i}\n            className={\n              'sidebar-content ' +\n              (i === this.props.stack.length - 1\n                ? 'sidebar-content-show'\n                : 'sidebar-content-hide')\n            }\n          >\n            {content}\n          </div>\n        ),\n    );\n    let cur_title = this.props.stack[this.props.stack.length - 1][0];\n    return (\n      <div\n        className={\n          'sidebar-container ' +\n          (cur_title !== null ? 'sidebar-on' : 'sidebar-off')\n        }\n      >\n        <div\n          className=\"sidebar-shadow\"\n          onClick={this.do_back_bound}\n          onTouchEnd={(e) => {\n            e.preventDefault();\n            e.target.click();\n          }}\n        />\n        <div className=\"sidebar\">{contents}</div>\n        <div className=\"sidebar-title\">\n          <a className=\"no-underline\" onClick={this.do_close_bound}>\n            &nbsp;\n            <span className=\"icon icon-close\" />\n            &nbsp;\n          </a>\n          {this.props.stack.length > 2 && (\n            <a className=\"no-underline\" onClick={this.do_back_bound}>\n              &nbsp;\n              <span className=\"icon icon-back\" />\n              &nbsp;\n            </a>\n          )}\n          {cur_title}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Pressure from 'pressure';\n\nimport './PressureHelper.css';\n\nconst THRESHOLD = 0.4;\nconst MULTIPLIER = 25;\nconst BORDER_WIDTH = 500; // also change css!\n\nexport class PressureHelper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      level: 0,\n      fired: false,\n    };\n    this.callback = props.callback;\n    this.esc_interval = null;\n  }\n\n  do_fire() {\n    if (this.esc_interval) {\n      clearInterval(this.esc_interval);\n      this.esc_interval = null;\n    }\n    this.setState({\n      level: 1,\n      fired: true,\n    });\n    this.callback();\n    window.setTimeout(() => {\n      this.setState({\n        level: 0,\n        fired: false,\n      });\n    }, 300);\n  }\n\n  componentDidMount() {\n    if (window.config.pressure) {\n      Pressure.set(\n        document.body,\n        {\n          change: (force) => {\n            if (!this.state.fired) {\n              if (force >= 0.999) {\n                this.do_fire();\n              } else\n                this.setState({\n                  level: force,\n                });\n            }\n          },\n          end: () => {\n            this.setState({\n              level: 0,\n              fired: false,\n            });\n          },\n        },\n        {\n          polyfill: false,\n          only: 'touch',\n          preventSelect: false,\n        },\n      );\n\n      document.addEventListener('keydown', (e) => {\n        if (!e.repeat && e.key === 'Escape') {\n          if (this.esc_interval) clearInterval(this.esc_interval);\n          this.setState(\n            {\n              level: THRESHOLD / 2,\n            },\n            () => {\n              this.esc_interval = setInterval(() => {\n                let new_level = this.state.level + 0.1;\n                if (new_level >= 0.999) this.do_fire();\n                else\n                  this.setState({\n                    level: new_level,\n                  });\n              }, 30);\n            },\n          );\n        }\n      });\n      document.addEventListener('keyup', (e) => {\n        if (e.key === 'Escape') {\n          if (this.esc_interval) {\n            clearInterval(this.esc_interval);\n            this.esc_interval = null;\n          }\n          this.setState({\n            level: 0,\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const pad = MULTIPLIER * (this.state.level - THRESHOLD) - BORDER_WIDTH;\n    return (\n      <div\n        className={\n          'pressure-box' +\n          (this.state.fired ? ' pressure-box-fired' : '') +\n          (this.state.level <= 0.0001 ? ' pressure-box-empty' : '')\n        }\n        style={{\n          left: pad,\n          right: pad,\n          top: pad,\n          bottom: pad,\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Flow } from './Flows';\nimport { Title } from './Title';\nimport { Sidebar } from './Sidebar';\nimport { PressureHelper } from './PressureHelper';\nimport { TokenCtx } from './UserAction';\nimport { load_config, bgimg_style } from './Config';\nimport { load_attentions } from './Attention.js';\nimport { listen_darkmode } from './infrastructure/functions';\nimport { LoginPopup, TitleLine } from './infrastructure/widgets';\n\nconst MAX_SIDEBAR_STACK_SIZE = 10;\n\nfunction DeprecatedAlert(props) {\n  return <div id=\"global-hint-container\" style={{ display: 'none' }} />;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    load_config();\n    load_attentions();\n    window.AS_BACKUP = localStorage['DEFAULT_ALLOW_SEARCH'] ? true : false;\n    listen_darkmode(\n      { default: undefined, light: false, dark: true }[\n        window.config.color_scheme\n      ],\n    );\n    this.state = {\n      sidebar_stack: [[null, null]], // list of [status, content]\n      mode: 'list', // list, single, search, attention\n      search_text: null,\n      flow_render_key: +new Date(),\n      token: localStorage['TOKEN'] || null,\n    };\n    this.show_sidebar_bound = this.show_sidebar.bind(this);\n    this.set_mode_bound = this.set_mode.bind(this);\n    this.on_pressure_bound = this.on_pressure.bind(this);\n  }\n\n  static is_darkmode() {\n    if (window.config.color_scheme === 'dark') return true;\n    if (window.config.color_scheme === 'light') return false;\n    else {\n      // 'default'\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\n    }\n  }\n\n  on_pressure() {\n    if (this.state.sidebar_stack.length > 1)\n      this.show_sidebar(null, null, 'clear');\n    else this.set_mode('list', null);\n  }\n\n  show_sidebar(title, content, mode = 'push') {\n    this.setState((prevState) => {\n      let ns = prevState.sidebar_stack.slice();\n      if (mode === 'push') {\n        if (ns.length === 1) {\n          document.body.style.top = `-${window.scrollY}px`;\n          document.body.style.position = 'fixed';\n          document.body.style.width = '100vw'; // Be responsive with fixed position\n        }\n        if (ns.length > MAX_SIDEBAR_STACK_SIZE) ns.splice(1, 1);\n        ns = ns.concat([[title, content]]);\n      } else if (mode === 'pop') {\n        if (ns.length === 1) return;\n        if (ns.length === 2) {\n          const scrollY = document.body.style.top;\n          document.body.style.position = '';\n          document.body.style.top = '';\n          document.body.style.width = '';\n          window.scrollTo(0, parseInt(scrollY || '0') * -1);\n        }\n        ns.pop();\n      } else if (mode === 'replace') {\n        ns.pop();\n        ns = ns.concat([[title, content]]);\n      } else if (mode === 'clear') {\n        const scrollY = document.body.style.top;\n        document.body.style.position = '';\n        document.body.style.top = '';\n        document.body.style.width = '';\n        window.scrollTo(0, parseInt(scrollY || '0') * -1);\n        ns = [[null, null]];\n      } else throw new Error('bad show_sidebar mode');\n      return {\n        sidebar_stack: ns,\n      };\n    });\n  }\n\n  set_mode(mode, search_text) {\n    this.setState({\n      mode: mode,\n      search_text: search_text,\n      flow_render_key: +new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <TokenCtx.Provider\n        value={{\n          value: this.state.token,\n          set_value: (x) => {\n            localStorage['TOKEN'] = x || '';\n            this.setState({\n              token: x,\n            });\n          },\n        }}\n      >\n        <PressureHelper callback={this.on_pressure_bound} />\n        <div className=\"bg-img\" style={bgimg_style()} />\n        <Title\n          show_sidebar={this.show_sidebar_bound}\n          set_mode={this.set_mode_bound}\n          mode={this.state.mode}\n        />\n        <TokenCtx.Consumer>\n          {(token) => (\n            <div className=\"left-container\">\n              <DeprecatedAlert token={token.value} />\n              {!token.value && (\n                <div className=\"flow-item-row aux-margin\">\n                  <div className=\"box box-tip\">\n                    <LoginPopup token_callback={token.set_value}>\n                      {(do_popup) => (\n                        <a onClick={do_popup}>\n                          <span className=\"icon icon-login\" />\n                          &nbsp;登录到 新T树洞\n                        </a>\n                      )}\n                    </LoginPopup>\n                  </div>\n                </div>\n              )}\n              {token.value ? (\n                <Flow\n                  key={this.state.flow_render_key}\n                  show_sidebar={this.show_sidebar_bound}\n                  mode={this.state.mode}\n                  search_text={this.state.search_text}\n                  token={token.value}\n                />\n              ) : (\n                <TitleLine text=\"请登录后查看内容\" />\n              )}\n              <br />\n            </div>\n          )}\n        </TokenCtx.Consumer>\n        <Sidebar\n          show_sidebar={this.show_sidebar_bound}\n          stack={this.state.sidebar_stack}\n        />\n      </TokenCtx.Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    // const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    // if (publicUrl.origin !== window.location.origin) {\n    // Our service worker won't work if PUBLIC_URL is on a different origin\n    // from what our page is served on. This might happen if a CDN is used to\n    // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n    // return;\n    // }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './fonts_7/icomoon.css';\nimport App from './App';\n//import {elevate} from './infrastructure/elevator';\nimport registerServiceWorker from './registerServiceWorker';\n\n//elevate();\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}